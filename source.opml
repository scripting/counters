<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Thu, 21 Sep 2023 00:44:50 GMT -->

<!-- 
   Hi this is Dave Winer. I write all my project code in an outliner, which 
   generates all the files that make up this GitHub project. You'll see a 
   source.opml file like this in each of my projects. It contains the outline 
   source that the repo files were generated from. This is the most logical place 
   to store them. You can read the code in any outliner that supports OPML, which 
   includes https://drummer.land. You can use the Open URL command in 
   Drummer's File menu to open the "raw" version of this file straight from the 
   GitHub repo.
 -->

<opml version="2.0">
	<head>
		<title>nodeEditor: counters</title>
		<dateCreated>Fri, 08 May 2015 11:57:16 GMT</dateCreated>
		<dateModified>Thu, 21 Sep 2023 00:44:50 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 2, 3, 8, 22, 38, 39, 47, 51, 53, 54, 57, 70, 72, 84, 85, 88, 91, 94, 98, 111, 122, 123, 140, 152, 155, 157, 162, 166, 187, 196, 201, 205, 232</expansionState>
		<vertScrollState>114</vertScrollState>
		<windowTop>56</windowTop>
		<windowLeft>717</windowLeft>
		<windowBottom>1008</windowBottom>
		<windowRight>1934</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/counters/">
			<outline text="worknotes.md">
				<outline text="#### 9/16/23; 5:53:28 PM by DW" created="Sat, 16 Sep 2023 21:53:27 GMT">
					<outline text="Looked for bugs for referer being passed via the HTTP call, but I didn't find any problems. " created="Sat, 16 Sep 2023 21:53:28 GMT"/>
					<outline text="I think Google considers it private info, but I'm sure they don't block their own access to the info. " created="Sat, 16 Sep 2023 21:53:55 GMT"/>
					<outline text="There's a lot of power and ownership that comes from having the dominant web browser." created="Sat, 16 Sep 2023 21:54:24 GMT"/>
					<outline text="Anyway if we get a referrer value, we now log it. " created="Sat, 16 Sep 2023 21:55:18 GMT"/>
					</outline>
				<outline text="#### 4/20/23; 4:23:10 PM by DW" created="Thu, 20 Apr 2023 20:23:04 GMT">
					<outline text="Apparently decodeURIComponent can fail, so we catch the errs." created="Thu, 20 Apr 2023 20:23:17 GMT"/>
					</outline>
				<outline text="#### 2/2/23; 4:30:33 PM by DW" created="Thu, 02 Feb 2023 21:30:32 GMT">
					<outline text="It's now running on https so it can be called from FeedLand. " created="Thu, 02 Feb 2023 21:30:33 GMT"/>
					</outline>
				<outline text="#### 1/30/23; 10:20:53 PM by DW" created="Tue, 31 Jan 2023 03:20:53 GMT">
					<outline text="In addition to accepting /counter, we also accept /hello to work around some blocking" created="Tue, 31 Jan 2023 03:20:54 GMT">
						<outline text="https://github.com/scripting/Scripting-News/issues/249" created="Tue, 31 Jan 2023 03:21:22 GMT"/>
						</outline>
					</outline>
				<outline text="#### 11/4/22; 10:00:25 AM by DW" created="Fri, 04 Nov 2022 14:00:25 GMT">
					<outline text="We were calling an old server on Bayside just to read a file on static.scripting.com. We can do that ourself, so I replaced the code, and it worked. " created="Fri, 04 Nov 2022 14:00:26 GMT"/>
					</outline>
				<outline text="#### 2/17/22; 5:07:28 PM by DW" created="Thu, 17 Feb 2022 22:07:27 GMT">
					<outline text="It's been running on Palatka for a while. Making the build script reflect this. " created="Thu, 17 Feb 2022 22:07:28 GMT"/>
					</outline>
				<outline text="#### 4/21/20; 6:54:41 PM by DW">
					<outline text="Moved from Hunter to Montana. It's the only app on Hunter that's doing anything for real. I decided to shut down the forever-server experiment. May be going in a different direction."/>
					</outline>
				<outline text="#### 11/16/19; 11:42:04 AM by DW">
					<outline text="Complete rewrite using latest techniques."/>
					<outline text="group param is ignored, all hits go to the &quot;scripting&quot; group."/>
					<outline text="counters.js" isComment="true">
						<outline text="var myProductName = &quot;counters&quot;, myVersion = &quot;0.5.8&quot;; " created="Mon, 03 Feb 2014 03:21:03 GMT" pgfnum="36831"/>
						<outline text="" created="Sun, 09 Feb 2014 05:43:36 GMT" pgfnum="37275"/>
						<outline text="//last build &lt;%now%&gt;" created="Sun, 09 Feb 2014 05:43:36 GMT" pgfnum="37276"/>
						<outline text="" created="Mon, 03 Feb 2014 14:19:23 GMT" pgfnum="36876"/>
						<outline text="var http = require (&quot;http&quot;);" created="Thu, 26 Dec 2013 23:02:58 GMT" pgfnum="34549"/>
						<outline text="var AWS = require (&quot;aws-sdk&quot;);"/>
						<outline text="var s3 = new AWS.S3 ();"/>
						<outline text="var urlpack = require (&quot;url&quot;);" created="Tue, 21 Jan 2014 00:09:23 GMT" pgfnum="36074"/>
						<outline text="var dns = require (&quot;dns&quot;);" created="Mon, 03 Feb 2014 14:08:04 GMT" pgfnum="36852"/>
						<outline text="var fs = require (&quot;fs&quot;);"/>
						<outline text="" created="Wed, 05 Feb 2014 17:55:23 GMT" pgfnum="37039"/>
						<outline text="var myPort, flRunningOnHeroku;" created="Sat, 01 Feb 2014 18:42:45 GMT" pgfnum="36699"/>
						<outline text="var myTimeZone = -5;" isComment="true" created="Sat, 08 Feb 2014 16:37:10 GMT" pgfnum="37234"/>
						<outline text="" created="Sat, 08 Feb 2014 16:37:19 GMT" pgfnum="37235"/>
						<outline text="var myIpAddress = tcpGetMyIpAddress ();" created="Sun, 02 Feb 2014 03:04:48 GMT" pgfnum="36725"/>
						<outline text="var myServerName = process.env.counterServerName;" created="Mon, 03 Feb 2014 14:14:57 GMT" pgfnum="36860"/>
						<outline text="" created="Mon, 03 Feb 2014 14:17:48 GMT" pgfnum="36868"/>
						<outline text="if (myServerName == undefined) {" created="Mon, 03 Feb 2014 14:17:49 GMT" pgfnum="36870">
							<outline text="myServerName = myIpAddress;" created="Mon, 03 Feb 2014 14:18:04 GMT" pgfnum="36872"/>
							<outline text="}" created="Mon, 03 Feb 2014 14:18:07 GMT" pgfnum="36873"/>
							</outline>
						<outline text="" created="Mon, 03 Feb 2014 14:17:49 GMT" pgfnum="36871"/>
						<outline text="var s3appPath = &quot;/static.scripting.com/counters/&quot;;" created="Mon, 03 Feb 2014 18:26:59 GMT" pgfnum="36978"/>
						<outline text="" created="Mon, 03 Feb 2014 18:27:06 GMT" pgfnum="36979"/>
						<outline text="var s3folderpath = s3appPath + myServerName + &quot;/&quot;;" created="Sun, 02 Feb 2014 17:53:16 GMT" pgfnum="36808"/>
						<outline text="" created="Sun, 02 Feb 2014 03:23:22 GMT" pgfnum="36729"/>
						<outline text="//code from utils.js">
							<outline text="function consoleLog (s) {" created="Wed, 29 Jan 2014 02:17:23 GMT" pgfnum="36549">
								<outline text="if (flRunningOnHeroku) { //they include the time in their console, no need to repeat" created="Wed, 05 Feb 2014 17:59:03 GMT" pgfnum="37046">
									<outline text="console.log (s);" created="Wed, 05 Feb 2014 17:59:16 GMT" pgfnum="37050"/>
									<outline text="}" created="Wed, 05 Feb 2014 17:59:06 GMT" pgfnum="37047"/>
									</outline>
								<outline text="else {" created="Wed, 05 Feb 2014 17:59:07 GMT" pgfnum="37048">
									<outline text="console.log (new Date ().toLocaleTimeString () + &quot;: &quot; + s);" created="Wed, 29 Jan 2014 02:20:19 GMT" pgfnum="36552"/>
									<outline text="}" created="Wed, 05 Feb 2014 17:59:11 GMT" pgfnum="37049"/>
									</outline>
								<outline text="}" created="Wed, 29 Jan 2014 02:17:32 GMT" pgfnum="36551"/>
								</outline>
							<outline text="function now () {" isComment="true" created="Mon, 03 Feb 2014 15:46:25 GMT" pgfnum="36895">
								<outline text="return (new Date ().toString ());" created="Mon, 03 Feb 2014 15:46:29 GMT" pgfnum="36896"/>
								<outline text="}" created="Mon, 03 Feb 2014 15:46:38 GMT" pgfnum="36897"/>
								</outline>
							<outline text="function tcpGetMyIpAddress () {">
								<outline text="var interfaces = require (&quot;os&quot;).networkInterfaces ();"/>
								<outline text="consoleLog (interfaces);" isComment="true" created="Sun, 02 Feb 2014 03:10:13 GMT" pgfnum="36726"/>
								<outline text="for (var devName in interfaces) {">
									<outline text="var iface = interfaces [devName];"/>
									<outline text="for (var i = 0; i &lt; iface.length; i++) {">
										<outline text="var alias = iface [i];"/>
										<outline text="if (alias.family === 'IPv4' &amp;&amp; alias.address !== '127.0.0.1' &amp;&amp; !alias.internal)">
											<outline text="return (alias.address);"/>
											<outline text="}"/>
											</outline>
										</outline>
									<outline text="}"/>
									</outline>
								<outline text="return (&quot;0.0.0.0&quot;);"/>
								<outline text="}"/>
								</outline>
							<outline text="function isAlpha (ch) {" created="Wed, 23 Jan 2013 15:16:34 GMT" pgfnum="17539">
								<outline text="return (((ch &gt;= 'a') &amp;&amp; (ch &lt;= 'z')) || ((ch &gt;= 'A') &amp;&amp; (ch &lt;= 'Z')));" created="Wed, 23 Jan 2013 15:17:06 GMT" pgfnum="17541"/>
								<outline text="}" created="Mon, 20 Jan 2014 04:13:24 GMT" pgfnum="35962"/>
								</outline>
							<outline text="function isNumeric (ch) {" created="Wed, 22 Jan 2014 15:27:48 GMT" pgfnum="36287">
								<outline text="return ((ch &gt;= '0') &amp;&amp; (ch &lt;= '9'));" created="Wed, 22 Jan 2014 15:27:56 GMT" pgfnum="36289"/>
								<outline text="}" created="Wed, 22 Jan 2014 15:27:53 GMT" pgfnum="36288"/>
								</outline>
							<outline text="function getAdjustedDate (theDate, localTimeZone) { //2/8/14 by DW -- adjust the time to local time" isComment="true" created="Sat, 08 Feb 2014 16:31:51 GMT" pgfnum="37228">
								<outline text="var offset = new Number (localTimeZone);" created="Thu, 13 Jun 2013 21:39:14 GMT" pgfnum="4646"/>
								<outline text="var d = new Date (theDate);" created="Thu, 13 Jun 2013 21:24:44 GMT" pgfnum="4636"/>
								<outline text="var localTime = d.getTime ();" created="Thu, 13 Jun 2013 21:29:10 GMT" pgfnum="4638"/>
								<outline text="var localOffset = d.getTimezoneOffset () *  60000;" created="Thu, 13 Jun 2013 21:29:18 GMT" pgfnum="4639"/>
								<outline text="var utc = localTime + localOffset;" created="Thu, 13 Jun 2013 21:30:17 GMT" pgfnum="4640"/>
								<outline text="var newTime = utc + (3600000 * offset);"/>
								<outline text="return (new Date (newTime))" created="Sat, 08 Feb 2014 16:33:17 GMT" pgfnum="37232"/>
								<outline text="}" created="Sat, 08 Feb 2014 16:32:21 GMT" pgfnum="37231"/>
								</outline>
							<outline text="function sameDay (d1, d2) { " created="Tue, 15 Jan 2013 00:24:33 GMT" pgfnum="17115">
								<outline text="//returns true if the two dates are on the same day" created="Tue, 29 Jan 2013 19:16:02 GMT" pgfnum="17889"/>
								<outline text="d1 = new Date (d1);" created="Tue, 15 Jan 2013 00:45:10 GMT" pgfnum="17126"/>
								<outline text="d2 = new Date (d2);" created="Tue, 15 Jan 2013 00:45:10 GMT" pgfnum="17126"/>
								<outline text="return ((d1.getFullYear () == d2.getFullYear ()) &amp;&amp; (d1.getMonth () == d2.getMonth ()) &amp;&amp; (d1.getDate () == d2.getDate ()));"/>
								<outline text="}" created="Mon, 03 Feb 2014 18:49:54 GMT" pgfnum="36998"/>
								</outline>
							<outline text="function padWithZeros (num, ctplaces) { " created="Thu, 06 Jun 2013 19:04:01 GMT" pgfnum="25297">
								<outline text="var s = num.toString ();" created="Thu, 06 Jun 2013 19:04:50 GMT" pgfnum="25301"/>
								<outline text="while (s.length &lt; ctplaces) {" created="Thu, 06 Jun 2013 19:04:23 GMT" pgfnum="25299">
									<outline text="s = &quot;0&quot; + s;" created="Thu, 06 Jun 2013 19:05:07 GMT" pgfnum="25302"/>
									<outline text="}" created="Thu, 06 Jun 2013 19:04:43 GMT" pgfnum="25300"/>
									</outline>
								<outline text="return (s);" created="Thu, 06 Jun 2013 19:12:58 GMT" pgfnum="25311"/>
								<outline text="}" created="Thu, 06 Jun 2013 19:04:11 GMT" pgfnum="25298"/>
								</outline>
							<outline text="function getDatePath (theDate, flLastSeparator) {" created="Wed, 24 Jul 2013 15:22:40 GMT" pgfnum="28194">
								<outline text="if (theDate == undefined) {" created="Wed, 24 Jul 2013 15:23:15 GMT" pgfnum="28196">
									<outline text="theDate = new Date ();" created="Wed, 24 Jul 2013 15:23:26 GMT" pgfnum="28197"/>
									<outline text="}" created="Wed, 24 Jul 2013 15:23:28 GMT" pgfnum="28198"/>
									</outline>
								<outline text="if (flLastSeparator == undefined) {" created="Wed, 24 Jul 2013 15:23:15 GMT" pgfnum="28196">
									<outline text="flLastSeparator = true;" created="Wed, 24 Jul 2013 15:23:26 GMT" pgfnum="28197"/>
									<outline text="}" created="Wed, 24 Jul 2013 15:23:28 GMT" pgfnum="28198"/>
									</outline>
								<outline text="" created="Wed, 24 Jul 2013 15:29:13 GMT" pgfnum="28201"/>
								<outline text="var month = padWithZeros (theDate.getMonth () + 1, 2);" created="Fri, 15 Jun 2007 22:48:17 GMT"/>
								<outline text="var day = padWithZeros (theDate.getDate (), 2);" created="Fri, 15 Jun 2007 22:48:17 GMT"/>
								<outline text="var year = theDate.getFullYear ();" created="Wed, 24 Jul 2013 15:27:43 GMT" pgfnum="28199"/>
								<outline text="" created="Wed, 24 Jul 2013 15:28:02 GMT" pgfnum="28200"/>
								<outline text="if (flLastSeparator) {">
									<outline text="return (year + &quot;/&quot; + month + &quot;/&quot; + day + &quot;/&quot;);" created="Fri, 15 Jun 2007 22:46:16 GMT"/>
									<outline text="}" created="Wed, 24 Jul 2013 15:29:47 GMT" pgfnum="28202"/>
									</outline>
								<outline text="else {">
									<outline text="return (year + &quot;/&quot; + month + &quot;/&quot; + day);" created="Fri, 15 Jun 2007 22:46:16 GMT"/>
									<outline text="}" created="Wed, 24 Jul 2013 15:29:58 GMT" pgfnum="28203"/>
									</outline>
								<outline text="}" created="Wed, 24 Jul 2013 15:23:09 GMT" pgfnum="28195"/>
								</outline>
							<outline text="function cleanName (name) {" created="Wed, 22 Jan 2014 15:21:12 GMT" pgfnum="36268">
								<outline text="var s = &quot;&quot;;" created="Wed, 22 Jan 2014 15:24:49 GMT" pgfnum="36279"/>
								<outline text="if (name == undefined) {" created="Tue, 04 Feb 2014 22:28:13 GMT" pgfnum="37028">
									<outline text="return (&quot;&quot;);" created="Tue, 04 Feb 2014 22:28:18 GMT" pgfnum="37029"/>
									<outline text="}" created="Tue, 04 Feb 2014 22:28:21 GMT" pgfnum="37030"/>
									</outline>
								<outline text="for (var i = 0; i &lt; name.length; i++) {" created="Wed, 22 Jan 2014 15:24:49 GMT" pgfnum="36281">
									<outline text="var ch = name [i];" created="Wed, 22 Jan 2014 15:23:24 GMT" pgfnum="36275"/>
									<outline text="if (isAlpha (ch) || isNumeric (ch)) {" created="Wed, 22 Jan 2014 15:25:48 GMT" pgfnum="36283">
										<outline text="s += ch;" created="Wed, 22 Jan 2014 15:26:24 GMT" pgfnum="36285"/>
										<outline text="}" created="Wed, 22 Jan 2014 15:26:13 GMT" pgfnum="36284"/>
										</outline>
									<outline text="}" created="Wed, 22 Jan 2014 15:25:05 GMT" pgfnum="36282"/>
									</outline>
								<outline text="return (s.toLowerCase (s));" created="Wed, 22 Jan 2014 15:27:03 GMT" pgfnum="36286"/>
								<outline text="}" created="Wed, 22 Jan 2014 15:21:19 GMT" pgfnum="36269"/>
								</outline>
							<outline text="function okparam (param) {" created="Mon, 03 Feb 2014 18:24:55 GMT" pgfnum="36971">
								<outline text="return ((param != undefined) &amp;&amp; (param.length &gt; 0));" created="Mon, 03 Feb 2014 18:25:12 GMT" pgfnum="36974"/>
								<outline text="}" created="Mon, 03 Feb 2014 18:25:07 GMT" pgfnum="36973"/>
								</outline>
							<outline text="function s3SplitPath (path) { //split path like this: /tmp.scripting.com/testing/one.txt -- into bucketname and path." created="Wed, 22 Jan 2014 23:00:12 GMT" pgfnum="36404">
								<outline text="var bucketname = &quot;&quot;;" created="Wed, 22 Jan 2014 23:02:12 GMT" pgfnum="36406"/>
								<outline text="if (path.length &gt; 0) {" created="Mon, 20 Jan 2014 03:38:45 GMT" pgfnum="35942">
									<outline text="if (path [0] == &quot;/&quot;) { //delete the slash" created="Mon, 20 Jan 2014 03:39:22 GMT" pgfnum="35945">
										<outline text="path = path.substr (1); " created="Mon, 20 Jan 2014 03:40:20 GMT" pgfnum="35947"/>
										<outline text="}" created="Mon, 20 Jan 2014 03:39:30 GMT" pgfnum="35946"/>
										</outline>
									<outline text="var ix = path.indexOf (&quot;/&quot;);"/>
									<outline text="bucketname = path.substr (0, ix);" created="Mon, 20 Jan 2014 03:43:33 GMT" pgfnum="35948"/>
									<outline text="path = path.substr (ix + 1);" created="Mon, 20 Jan 2014 03:44:19 GMT" pgfnum="35949"/>
									<outline text="}" created="Mon, 20 Jan 2014 03:38:57 GMT" pgfnum="35943"/>
									</outline>
								<outline text="return ({Bucket: bucketname, Key: path});" created="Wed, 22 Jan 2014 23:03:05 GMT" pgfnum="36407"/>
								<outline text="}" created="Wed, 22 Jan 2014 23:01:40 GMT" pgfnum="36405"/>
								</outline>
							<outline text="function s3GetObject (path, callback) {" created="Wed, 22 Jan 2014 22:59:13 GMT" pgfnum="36400">
								<outline text="var params = s3SplitPath (path);" created="Wed, 22 Jan 2014 23:04:04 GMT" pgfnum="36408"/>
								<outline text="s3.getObject (params, function (err, data) {" created="Wed, 22 Jan 2014 23:05:46 GMT" pgfnum="36409">
									<outline text="callback (data);" created="Wed, 22 Jan 2014 23:06:23 GMT" pgfnum="36411"/>
									<outline text="});" created="Wed, 22 Jan 2014 23:06:17 GMT" pgfnum="36410"/>
									</outline>
								<outline text="}" created="Wed, 22 Jan 2014 22:59:26 GMT" pgfnum="36401"/>
								</outline>
							<outline text="function s3NewObject (path, data, type, acl, callback) {" created="Mon, 20 Jan 2014 00:33:52 GMT" pgfnum="35899">
								<outline text="var splitpath = s3SplitPath (path);" created="Thu, 23 Jan 2014 17:53:43 GMT" pgfnum="36441"/>
								<outline text="if (type == undefined) {" created="Mon, 20 Jan 2014 00:36:10 GMT" pgfnum="35904">
									<outline text="type = s3defaultType;" created="Mon, 20 Jan 2014 00:36:16 GMT" pgfnum="35906"/>
									<outline text="}" created="Mon, 20 Jan 2014 00:36:19 GMT" pgfnum="35907"/>
									</outline>
								<outline text="if (acl == undefined) {" created="Mon, 20 Jan 2014 00:36:10 GMT" pgfnum="35904">
									<outline text="acl = s3defaultAcl;" created="Mon, 20 Jan 2014 00:36:16 GMT" pgfnum="35906"/>
									<outline text="}" created="Mon, 20 Jan 2014 00:36:19 GMT" pgfnum="35907"/>
									</outline>
								<outline text="var params = {" created="Sun, 19 Jan 2014 02:48:19 GMT" pgfnum="35882">
									<outline text="ACL: acl," created="Sun, 19 Jan 2014 03:05:16 GMT" pgfnum="35889"/>
									<outline text="ContentType: type," created="Sun, 19 Jan 2014 03:06:24 GMT" pgfnum="35890"/>
									<outline text="Body: data," created="Sun, 19 Jan 2014 02:48:36 GMT" pgfnum="35884"/>
									<outline text="Bucket: splitpath.Bucket," created="Sun, 19 Jan 2014 02:48:54 GMT" pgfnum="35885"/>
									<outline text="Key: splitpath.Key" created="Sun, 19 Jan 2014 02:49:35 GMT" pgfnum="35886"/>
									<outline text="};" created="Sun, 19 Jan 2014 02:48:31 GMT" pgfnum="35883"/>
									</outline>
								<outline text="s3.putObject (params, function (err, data) { " created="Sun, 19 Jan 2014 02:47:00 GMT" pgfnum="35877">
									<outline text="consoleLog (&quot;s3NewObject: http://&quot; + splitpath.Bucket + &quot;/&quot; + splitpath.Key);" isComment="true" created="Mon, 20 Jan 2014 00:47:21 GMT" pgfnum="35912"/>
									<outline text="if (callback != undefined) {" created="Wed, 22 Jan 2014 23:26:51 GMT" pgfnum="36419">
										<outline text="callback (err, data);" created="Wed, 22 Jan 2014 23:26:10 GMT" pgfnum="36417"/>
										<outline text="}" created="Wed, 22 Jan 2014 23:27:05 GMT" pgfnum="36421"/>
										</outline>
									<outline text="});" created="Sun, 19 Jan 2014 02:47:49 GMT" pgfnum="35878"/>
									</outline>
								<outline text="}" created="Mon, 20 Jan 2014 00:34:31 GMT" pgfnum="35902"/>
								</outline>
							<outline text="function s3getJsonObject (path, callback) {" created="Sun, 02 Feb 2014 17:44:36 GMT" pgfnum="36802">
								<outline text="s3GetObject (path, function (data) {" created="Wed, 22 Jan 2014 23:07:46 GMT" pgfnum="36412">
									<outline text="if (data == null) {" created="Thu, 23 Jan 2014 18:37:27 GMT" pgfnum="36463">
										<outline text="callback (new Object ());" created="Wed, 22 Jan 2014 03:45:13 GMT" pgfnum="36264"/>
										<outline text="}" created="Thu, 23 Jan 2014 18:37:33 GMT" pgfnum="36464"/>
										</outline>
									<outline text="else {" created="Thu, 23 Jan 2014 18:37:35 GMT" pgfnum="36465">
										<outline text="callback (JSON.parse (data.Body));" created="Wed, 22 Jan 2014 03:45:13 GMT" pgfnum="36264"/>
										<outline text="}" created="Thu, 23 Jan 2014 18:37:39 GMT" pgfnum="36466"/>
										</outline>
									<outline text="});" created="Wed, 22 Jan 2014 23:07:55 GMT" pgfnum="36413"/>
									</outline>
								<outline text="}" created="Sun, 02 Feb 2014 17:44:47 GMT" pgfnum="36803"/>
								</outline>
							<outline text="function s3putJsonObject (path, obj, callback) {" created="Sun, 02 Feb 2014 17:44:49 GMT" pgfnum="36804">
								<outline text="var jsontext = JSON.stringify (obj, undefined, 3);" created="Sun, 02 Feb 2014 17:47:59 GMT" pgfnum="36806"/>
								<outline text="consoleLog (&quot;s3putJsonObject: &quot; + path);" isComment="true" created="Sun, 02 Feb 2014 18:02:16 GMT" pgfnum="36816"/>
								<outline text="s3NewObject (path, jsontext, &quot;text/plain&quot;, &quot;public-read&quot;, function (err, data) {" created="Wed, 22 Jan 2014 22:41:22 GMT" pgfnum="36396">
									<outline text="if (err != null) {" created="Sun, 02 Feb 2014 18:03:44 GMT" pgfnum="36817">
										<outline text="consoleLog (&quot;s3putJsonObject: error: &quot; + err.message);" created="Sun, 02 Feb 2014 18:02:16 GMT" pgfnum="36816"/>
										<outline text="}" created="Sun, 02 Feb 2014 18:03:49 GMT" pgfnum="36818"/>
										</outline>
									<outline text="else {" created="Sun, 02 Feb 2014 18:04:08 GMT" pgfnum="36819">
										<outline text="if (callback != undefined) {" created="Fri, 24 Jan 2014 22:31:50 GMT" pgfnum="36543">
											<outline text="callback (err, data);" created="Wed, 22 Jan 2014 23:26:59 GMT" pgfnum="36420"/>
											<outline text="}" created="Fri, 24 Jan 2014 22:32:01 GMT" pgfnum="36544"/>
											</outline>
										<outline text="}" created="Sun, 02 Feb 2014 18:04:13 GMT" pgfnum="36820"/>
										</outline>
									<outline text="});" created="Wed, 22 Jan 2014 23:26:37 GMT" pgfnum="36418"/>
									</outline>
								<outline text="}" created="Sun, 02 Feb 2014 17:44:59 GMT" pgfnum="36805"/>
								</outline>
							</outline>
						<outline text="//test code" isComment="true" created="Mon, 03 Feb 2014 14:10:16 GMT" pgfnum="36855">
							<outline text="dns.reverse (myIpAddress, function (err, domains) {">
								<outline text="consoleLog (JSON.stringify (domains));"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="" created="Mon, 03 Feb 2014 14:10:17 GMT" pgfnum="36858"/>
						<outline text="if (process.env.PORT == undefined) { //it's not Heroku" created="Sat, 01 Feb 2014 18:42:45 GMT" pgfnum="36700">
							<outline text="if (process.env.fpServerPort == undefined) {" created="Wed, 05 Feb 2014 17:56:11 GMT" pgfnum="37040">
								<outline text="myPort = 5337;" created="Wed, 05 Feb 2014 17:56:19 GMT" pgfnum="37041"/>
								<outline text="}" created="Wed, 05 Feb 2014 17:56:20 GMT" pgfnum="37042"/>
								</outline>
							<outline text="else {" created="Wed, 05 Feb 2014 17:56:21 GMT" pgfnum="37043">
								<outline text="myPort = process.env.fpServerPort;" created="Sat, 01 Feb 2014 18:43:25 GMT" pgfnum="36705"/>
								<outline text="}" created="Wed, 05 Feb 2014 17:56:28 GMT" pgfnum="37044"/>
								</outline>
							<outline text="flRunningOnHeroku = false;"/>
							<outline text="}" created="Sat, 01 Feb 2014 18:43:07 GMT" pgfnum="36702"/>
							</outline>
						<outline text="else {" created="Sat, 01 Feb 2014 18:43:09 GMT" pgfnum="36703">
							<outline text="myPort = process.env.PORT;" created="Sat, 01 Feb 2014 18:43:31 GMT" pgfnum="36706"/>
							<outline text="flRunningOnHeroku = true;"/>
							<outline text="}" created="Sat, 01 Feb 2014 18:43:11 GMT" pgfnum="36704"/>
							</outline>
						<outline text=""/>
						<outline text="var config = new Object ();"/>
						<outline text=""/>
						<outline text="//code added 10/16/16 by DW">
							<outline text="function loadConfig (callback) {">
								<outline text="fs.readFile (&quot;config.json&quot;, function (err, data) {">
									<outline text="var flError = true;"/>
									<outline text="if (!err) {">
										<outline text="var jstruct = JSON.parse (data.toString ());"/>
										<outline text="for (x in jstruct) {">
											<outline text="config [x] = jstruct [x];"/>
											<outline text="}"/>
											</outline>
										<outline text="console.log (&quot;config == &quot; + JSON.stringify (config, undefined, 4) + &quot;\n\n&quot;);" isComment="true"/>
										<outline text="flError = false;"/>
										<outline text="}"/>
										</outline>
									<outline text="if (callback !== undefined) {">
										<outline text="callback ();"/>
										<outline text="}"/>
										</outline>
									<outline text="});"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="function stringContains (s, whatItMightContain, flUnicase) { ">
								<outline text="if (flUnicase === undefined) {">
									<outline text="flUnicase = true;"/>
									<outline text="}"/>
									</outline>
								<outline text="if (flUnicase) {">
									<outline text="s = s.toLowerCase ();"/>
									<outline text="whatItMightContain = whatItMightContain.toLowerCase ();"/>
									<outline text="}"/>
									</outline>
								<outline text="return (s.indexOf (whatItMightContain) != -1);"/>
								<outline text="}"/>
								</outline>
							<outline text="function notBlacklisted (url) {">
								<outline text="if (url === undefined) { //no url param, not blacklisted">
									<outline text="return (true);"/>
									<outline text="}"/>
									</outline>
								<outline text="var lowerUrl = url.toLowerCase ();"/>
								<outline text="for (var i = 0; i &lt; config.blacklist.length; i++) {">
									<outline text="var x = config.blacklist [i];"/>
									<outline text="if (stringContains (lowerUrl, x)) { //blacklisted">
										<outline text="console.log (&quot;notBlacklisted: url == &quot; + url + &quot; is blacklisted. x == &quot; + x);"/>
										<outline text="return (false);"/>
										<outline text="}"/>
										</outline>
									<outline text="}"/>
									</outline>
								<outline text="return (true); //not blacklisted"/>
								<outline text="}"/>
								</outline>
							<outline text="function everyMinute () {">
								<outline text="loadConfig (function () {">
									<outline text="var now = new Date ();" isComment="true"/>
									<outline text="console.log (&quot;\neveryMinute: &quot; + now.toLocaleTimeString ());" isComment="true"/>
									<outline text="});"/>
									</outline>
								<outline text="}"/>
								</outline>
							</outline>
						<outline text=""/>
						<outline text="loadConfig (function () {">
							<outline text="console.log (&quot;\n&quot; + myProductName + &quot; v&quot; + myVersion + &quot;, port == &quot; + myPort + &quot;, S3 path == &quot; + s3appPath + &quot;\n&quot;);" created="Mon, 03 Feb 2014 18:54:58 GMT" pgfnum="36999"/>
							<outline text="setInterval (everyMinute, 60000); "/>
							<outline text="http.createServer (function (httpRequest, httpResponse) {">
								<outline text="var parsedUrl = urlpack.parse (httpRequest.url, true);" created="Tue, 21 Jan 2014 00:21:43 GMT" pgfnum="36078"/>
								<outline text="if (notBlacklisted (parsedUrl.query.url)) {">
									<outline text="var lowerpath = parsedUrl.pathname.toLowerCase ();"/>
									<outline text="consoleLog (httpRequest.url);" isComment="true" created="Mon, 03 Feb 2014 03:36:04 GMT" pgfnum="36844"/>
									<outline text="switch (lowerpath) {">
										<outline text="case &quot;/version&quot;:" created="Wed, 22 Jan 2014 15:18:23 GMT" pgfnum="36265">
											<outline text="httpResponse.writeHead (200, {&quot;Content-Type&quot;: &quot;text/plain&quot;});"/>
											<outline text="httpResponse.end (myVersion);    "/>
											<outline text="return;" created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
											</outline>
										<outline text="case &quot;/now&quot;:" created="Sat, 08 Feb 2014 16:43:58 GMT" pgfnum="37236">
											<outline text="httpResponse.writeHead (200, {&quot;Content-Type&quot;: &quot;text/plain&quot;});"/>
											<outline text="httpResponse.end (new Date ().toString ());    "/>
											<outline text="return;" created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
											</outline>
										<outline text="case &quot;/counter&quot;:" created="Mon, 03 Feb 2014 03:21:56 GMT" pgfnum="36833">
											<outline text="var referer = parsedUrl.query.referer, now = new Date (); nowstring = now.toString ();" created="Mon, 03 Feb 2014 16:05:04 GMT" pgfnum="36900"/>
											<outline text="if (okparam (referer) &amp;&amp; okparam (parsedUrl.query.group)) {" created="Mon, 03 Feb 2014 17:31:59 GMT" pgfnum="36965">
												<outline text="var group = cleanName (parsedUrl.query.group);" created="Mon, 03 Feb 2014 16:05:04 GMT" pgfnum="36900"/>
												<outline text="console.log (now.toLocaleTimeString () + &quot;: &quot; + lowerpath + &quot;, group == &quot; + group + &quot;, referer == &quot; + referer); //10/6/19 by DW"/>
												<outline text="var s3groupPath = s3appPath + group + &quot;/&quot;;" created="Mon, 03 Feb 2014 22:07:10 GMT" pgfnum="37025"/>
												<outline text="var s3todayPath = s3groupPath + &quot;today.json&quot;;" created="Mon, 03 Feb 2014 18:26:34 GMT" pgfnum="36977"/>
												<outline text="var s3archivePath = s3groupPath + getDatePath (now, false) + &quot;.json&quot;;" created="Mon, 03 Feb 2014 22:05:57 GMT" pgfnum="37024"/>
												<outline text="s3getJsonObject (s3todayPath, function (obj) {" created="Sun, 02 Feb 2014 18:15:21 GMT" pgfnum="36822">
													<outline text="//stats" created="Wed, 05 Feb 2014 16:16:56 GMT" pgfnum="37032">
														<outline text="if (obj.ctUpdates == undefined) {" created="Wed, 05 Feb 2014 16:16:58 GMT" pgfnum="37033">
															<outline text="obj.ctUpdates = 0;" created="Wed, 05 Feb 2014 16:17:20 GMT" pgfnum="37035"/>
															<outline text="}" created="Wed, 05 Feb 2014 16:17:15 GMT" pgfnum="37034"/>
															</outline>
														<outline text="if (obj.ctUpdatesToday == undefined) {" created="Wed, 05 Feb 2014 16:16:58 GMT" pgfnum="37033">
															<outline text="obj.ctUpdatesToday = 0;" created="Wed, 05 Feb 2014 16:17:20 GMT" pgfnum="37035"/>
															<outline text="}" created="Wed, 05 Feb 2014 16:17:15 GMT" pgfnum="37034"/>
															</outline>
														<outline text="obj.ctUpdates++;" created="Wed, 05 Feb 2014 16:17:40 GMT" pgfnum="37036"/>
														<outline text="obj.ctUpdatesToday++;" created="Wed, 05 Feb 2014 16:17:43 GMT" pgfnum="37037"/>
														</outline>
													<outline text="//date rollover" created="Mon, 03 Feb 2014 18:44:32 GMT" pgfnum="36983">
														<outline text="if (obj.theDate == undefined) {" created="Mon, 03 Feb 2014 18:44:38 GMT" pgfnum="36988">
															<outline text="obj.theDate = nowstring;" created="Mon, 03 Feb 2014 18:45:07 GMT" pgfnum="36989"/>
															<outline text="}" created="Mon, 03 Feb 2014 18:45:12 GMT" pgfnum="36990"/>
															</outline>
														<outline text="else {" created="Mon, 03 Feb 2014 18:45:26 GMT" pgfnum="36991">
															<outline text="if (!sameDay (obj.theDate, now)) {" created="Mon, 03 Feb 2014 18:45:55 GMT" pgfnum="36993">
																<outline text="var ctsaved = obj.ctUpdates;" created="Sat, 08 Feb 2014 16:51:22 GMT" pgfnum="37239"/>
																<outline text="obj = new Object (); " created="Mon, 03 Feb 2014 18:47:28 GMT" pgfnum="36995"/>
																<outline text="obj.ctUpdates = ctsaved;" created="Sat, 08 Feb 2014 16:51:34 GMT" pgfnum="37240"/>
																<outline text="obj.theDate = nowstring;" created="Mon, 03 Feb 2014 18:45:07 GMT" pgfnum="36989"/>
																<outline text="obj.ctUpdatesToday = 0;" created="Wed, 05 Feb 2014 16:17:20 GMT" pgfnum="37035"/>
																<outline text="consoleLog (&quot;Rollover.&quot;);" created="Mon, 03 Feb 2014 18:48:21 GMT" pgfnum="36997"/>
																<outline text="}" created="Mon, 03 Feb 2014 18:46:08 GMT" pgfnum="36994"/>
																</outline>
															<outline text="}" created="Mon, 03 Feb 2014 18:45:30 GMT" pgfnum="36992"/>
															</outline>
														<outline text="obj.whenLastUpdate = nowstring;" created="Wed, 05 Feb 2014 16:20:29 GMT" pgfnum="37038"/>
														</outline>
													<outline text="" created="Mon, 03 Feb 2014 21:49:14 GMT" pgfnum="37005"/>
													<outline text="//add to the &quot;referrers&quot; array" created="Sun, 09 Feb 2014 15:25:26 GMT" pgfnum="37277">
														<outline text="if (obj.referrers == undefined) {" created="Mon, 03 Feb 2014 16:53:37 GMT" pgfnum="36933">
															<outline text="obj.referrers = new Array ();" created="Mon, 03 Feb 2014 16:55:15 GMT" pgfnum="36935"/>
															<outline text="}" created="Mon, 03 Feb 2014 16:55:21 GMT" pgfnum="36936"/>
															</outline>
														<outline text="var flfound = false, len = obj.referrers.length; " created="Mon, 03 Feb 2014 21:49:30 GMT" pgfnum="37008"/>
														<outline text="for (var i = 0; i &lt; len; i++) {" created="Mon, 03 Feb 2014 21:49:37 GMT" pgfnum="37009">
															<outline text="if (obj.referrers [i].url == referer) {" created="Mon, 03 Feb 2014 21:49:57 GMT" pgfnum="37011">
																<outline text="obj.referrers [i].ct++;" created="Mon, 03 Feb 2014 21:50:24 GMT" pgfnum="37015"/>
																<outline text="flfound = true;" created="Mon, 03 Feb 2014 21:50:14 GMT" pgfnum="37013"/>
																<outline text="break;" created="Mon, 03 Feb 2014 21:50:17 GMT" pgfnum="37014"/>
																<outline text="}" created="Mon, 03 Feb 2014 21:50:10 GMT" pgfnum="37012"/>
																</outline>
															<outline text="}" created="Mon, 03 Feb 2014 21:49:49 GMT" pgfnum="37010"/>
															</outline>
														<outline text="if (!flfound) {" created="Mon, 03 Feb 2014 21:50:49 GMT" pgfnum="37016">
															<outline text="var newobj = new Object ();" created="Mon, 03 Feb 2014 21:51:12 GMT" pgfnum="37019"/>
															<outline text="newobj.ct = 1;" created="Mon, 03 Feb 2014 21:51:20 GMT" pgfnum="37020"/>
															<outline text="newobj.url = referer;" created="Mon, 03 Feb 2014 21:51:23 GMT" pgfnum="37021"/>
															<outline text="obj.referrers [len] = newobj;" created="Mon, 03 Feb 2014 21:50:56 GMT" pgfnum="37018"/>
															<outline text="}" created="Mon, 03 Feb 2014 21:50:53 GMT" pgfnum="37017"/>
															</outline>
														</outline>
													<outline text="//add to the &quot;pages array&quot; -- count hits per page on this site" created="Sun, 09 Feb 2014 15:25:48 GMT" pgfnum="37278">
														<outline text="var urlthispage = parsedUrl.query.url;" created="Sun, 09 Feb 2014 15:27:11 GMT" pgfnum="37280"/>
														<outline text="if (obj.pages == undefined) {" created="Mon, 03 Feb 2014 16:53:37 GMT" pgfnum="36933">
															<outline text="obj.pages = new Array ();" created="Mon, 03 Feb 2014 16:55:15 GMT" pgfnum="36935"/>
															<outline text="}" created="Mon, 03 Feb 2014 16:55:21 GMT" pgfnum="36936"/>
															</outline>
														<outline text="var flfound = false, len = obj.pages.length; " created="Mon, 03 Feb 2014 21:49:30 GMT" pgfnum="37008"/>
														<outline text="for (var i = 0; i &lt; len; i++) {" created="Mon, 03 Feb 2014 21:49:37 GMT" pgfnum="37009">
															<outline text="if (obj.pages [i].url == urlthispage) {" created="Mon, 03 Feb 2014 21:49:57 GMT" pgfnum="37011">
																<outline text="obj.pages [i].ct++;" created="Mon, 03 Feb 2014 21:50:24 GMT" pgfnum="37015"/>
																<outline text="flfound = true;" created="Mon, 03 Feb 2014 21:50:14 GMT" pgfnum="37013"/>
																<outline text="break;" created="Mon, 03 Feb 2014 21:50:17 GMT" pgfnum="37014"/>
																<outline text="}" created="Mon, 03 Feb 2014 21:50:10 GMT" pgfnum="37012"/>
																</outline>
															<outline text="}" created="Mon, 03 Feb 2014 21:49:49 GMT" pgfnum="37010"/>
															</outline>
														<outline text="if (!flfound) {" created="Mon, 03 Feb 2014 21:50:49 GMT" pgfnum="37016">
															<outline text="var newobj = new Object ();" created="Mon, 03 Feb 2014 21:51:12 GMT" pgfnum="37019"/>
															<outline text="newobj.ct = 1;" created="Mon, 03 Feb 2014 21:51:20 GMT" pgfnum="37020"/>
															<outline text="newobj.url = urlthispage;" created="Mon, 03 Feb 2014 21:51:23 GMT" pgfnum="37021"/>
															<outline text="obj.pages [len] = newobj;" created="Mon, 03 Feb 2014 21:50:56 GMT" pgfnum="37018"/>
															<outline text="}" created="Mon, 03 Feb 2014 21:50:53 GMT" pgfnum="37017"/>
															</outline>
														</outline>
													<outline text="" created="Mon, 03 Feb 2014 21:49:14 GMT" pgfnum="37007"/>
													<outline text="consoleLog (&quot;Counter: referer == &quot; + referer);" isComment="true" created="Mon, 03 Feb 2014 17:23:16 GMT" pgfnum="36964"/>
													<outline text="" created="Mon, 03 Feb 2014 03:25:31 GMT" pgfnum="36842"/>
													<outline text="s3putJsonObject (s3todayPath, obj, function (err, data) {" created="Sun, 02 Feb 2014 17:55:36 GMT" pgfnum="36815">
														<outline text="s3putJsonObject (s3archivePath, obj);" created="Mon, 03 Feb 2014 22:10:05 GMT" pgfnum="37027"/>
														<outline text="});" created="Mon, 03 Feb 2014 22:09:53 GMT" pgfnum="37026"/>
														</outline>
													<outline text="});" created="Sun, 02 Feb 2014 18:15:48 GMT" pgfnum="36823"/>
													</outline>
												<outline text="}" created="Mon, 03 Feb 2014 17:32:05 GMT" pgfnum="36966"/>
												</outline>
											<outline text="" created="Mon, 03 Feb 2014 16:03:28 GMT" pgfnum="36899"/>
											<outline text="//set up the http response" created="Sun, 02 Feb 2014 18:17:26 GMT" pgfnum="36826">
												<outline text="httpResponse.writeHead (200, {&quot;Content-Type&quot;: &quot;application/json&quot;});"/>
												<outline text="var x = {&quot;message&quot;: &quot;We got your ping on &quot; + now};" created="Tue, 21 Jan 2014 14:40:41 GMT" pgfnum="36093"/>
												<outline text="var s = &quot;getData (&quot; + JSON.stringify (x) + &quot;)&quot;;" created="Tue, 21 Jan 2014 14:39:20 GMT" pgfnum="36090"/>
												<outline text="httpResponse.end (s);    "/>
												</outline>
											<outline text="" created="Mon, 03 Feb 2014 15:43:24 GMT" pgfnum="36894"/>
											<outline text="return" created="Mon, 03 Feb 2014 03:22:05 GMT" pgfnum="36835"/>
											</outline>
										<outline text="case &quot;/gettodayshits&quot;:" created="Thu, 06 Feb 2014 00:10:31 GMT" pgfnum="37064">
											<outline text="if (okparam (parsedUrl.query.group)) {" created="Thu, 06 Feb 2014 00:11:10 GMT" pgfnum="37068">
												<outline text="var group = cleanName (parsedUrl.query.group);" created="Mon, 03 Feb 2014 16:05:04 GMT" pgfnum="36900"/>
												<outline text="var s3groupPath = s3appPath + group + &quot;/&quot;;" created="Mon, 03 Feb 2014 22:07:10 GMT" pgfnum="37025"/>
												<outline text="var s3todayPath = s3groupPath + &quot;today.json&quot;;" created="Mon, 03 Feb 2014 18:26:34 GMT" pgfnum="36977"/>
												<outline text="s3getJsonObject (s3todayPath, function (obj) {" created="Thu, 06 Feb 2014 00:12:26 GMT" pgfnum="37072">
													<outline text="httpResponse.writeHead (200, {&quot;Content-Type&quot;: &quot;application/json&quot;});"/>
													<outline text="var s = &quot;getData (&quot; + JSON.stringify (obj, undefined, 4) + &quot;)&quot;;" created="Tue, 21 Jan 2014 14:39:20 GMT" pgfnum="36090"/>
													<outline text="httpResponse.end (s);    "/>
													<outline text="});" created="Thu, 06 Feb 2014 00:12:28 GMT" pgfnum="37073"/>
													</outline>
												<outline text="}" created="Thu, 06 Feb 2014 00:11:42 GMT" pgfnum="37071"/>
												</outline>
											<outline text="" created="Thu, 06 Feb 2014 00:11:10 GMT" pgfnum="37070"/>
											<outline text="return;" created="Thu, 06 Feb 2014 00:10:50 GMT" pgfnum="37065"/>
											<outline text="" created="Thu, 06 Feb 2014 00:10:54 GMT" pgfnum="37066"/>
											</outline>
										<outline text="}" created="Mon, 03 Feb 2014 03:20:25 GMT" pgfnum="36830"/>
										</outline>
									<outline text="}"/>
									</outline>
								<outline text="}).listen (myPort);"/>
								</outline>
							<outline text="});"/>
							</outline>
						</outline>
					<outline text="package.json">
						<outline text="{">
							<outline text="&quot;name&quot;: &quot;counters&quot;,"/>
							<outline text="&quot;description&quot;: &quot;A simple node.js app to track referrers.&quot;,"/>
							<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@smallpicture.com&gt;&quot;,"/>
							<outline text="&quot;version&quot;: &quot;0.4.0&quot;,"/>
							<outline text="&quot;scripts&quot;: {">
								<outline text="&quot;start&quot;: &quot;node counters.js&quot;">
									<outline text="},"/>
									</outline>
								</outline>
							<outline text="&quot;repository&quot;: {">
								<outline text="&quot;type&quot;: &quot;git&quot;,"/>
								<outline text="&quot;url&quot;: &quot;https://github.com/scripting/counters.git&quot;"/>
								<outline text="},"/>
								</outline>
							<outline text="&quot;dependencies&quot; : {">
								<outline text="&quot;aws-sdk&quot;: &quot;*&quot;"/>
								<outline text="}, "/>
								</outline>
							<outline text="&quot;license&quot;: &quot;MIT&quot;,"/>
							<outline text="&quot;engines&quot;: {">
								<outline text="&quot;node&quot;: &quot;0.6.x&quot;"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						</outline>
					</outline>
				<outline text="#### 10/6/19; 10:43:28 AM by DW">
					<outline text="changed version from 0.57e to 0.5.8"/>
					<outline text="logging was a mess. now we only log /counter events, and report the time, group and referer.">
						<outline text="we weren't reporting the time before. "/>
						</outline>
					</outline>
				<outline text="#### 9/23/19; 12:16:29 PM by DW">
					<outline text="moved to hunter, to run under forever-server. used to run on bayside at a different domain. ">
						<outline text="also changed the script in utils.js, so call the server on hunter."/>
						</outline>
					</outline>
				<outline text="#### 10/16/16; 12:34:51 PM by DW">
					<outline text="added blacklist, to get olynon.com out of my log."/>
					</outline>
				<outline text="#### 7/2/16; 9:57:13 AM by DW">
					<outline text="moved from montauk to bayside"/>
					</outline>
				<outline text="#### 2/3/14 by DW" created="Mon, 03 Feb 2014 21:47:02 GMT" pgfnum="37001">
					<outline text="The daily data structure has to be an array because JS can only sort arrays." created="Mon, 03 Feb 2014 21:47:15 GMT" pgfnum="37002"/>
					<outline text="User can optionally set an environment variable, counterServerName. " created="Mon, 03 Feb 2014 14:15:36 GMT" pgfnum="36862">
						<outline text="If it's defined we'll use that name instead of the IP address to name the folder for the counter logs." created="Mon, 03 Feb 2014 14:17:01 GMT" pgfnum="36866">
							<outline text="export counterServerName=boston"/>
							</outline>
						</outline>
					</outline>
				</outline>
			<outline text="package.json">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;counters&quot;,"/>
					<outline text="&quot;description&quot;: &quot;A simple Node app to track hits and referrers.&quot;,"/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.5.9&quot;,"/>
					<outline text="&quot;main&quot;: &quot;counters.js&quot;," created="Thu, 17 Feb 2022 21:56:38 GMT"/>
					<outline text="&quot;scripts&quot;: {">
						<outline text="&quot;start&quot;: &quot;node counters.js&quot;"/>
						<outline text="},"/>
						</outline>
					<outline text="&quot;repository&quot;: {">
						<outline text="&quot;type&quot;: &quot;git&quot;,"/>
						<outline text="&quot;url&quot;: &quot;https://github.com/scripting/counters.git&quot;"/>
						<outline text="},"/>
						</outline>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;davehttp&quot;: &quot;*&quot;,"/>
						<outline text="&quot;daves3&quot;: &quot;*&quot;"/>
						<outline text="}, "/>
						</outline>
					<outline text="&quot;license&quot;: &quot;MIT&quot;,"/>
					<outline text="&quot;engines&quot;: {">
						<outline text="&quot;node&quot;: &quot;*&quot;"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="counters.js">
				<outline text="var myVersion = &quot;0.5.9&quot;, myProductName = &quot;counters&quot;;" created="Mon, 03 Feb 2014 03:21:03 GMT" pgfnum="36831"/>
				<outline text=""/>
				<outline text="const fs = require (&quot;fs&quot;);"/>
				<outline text="const request = require (&quot;request&quot;);"/>
				<outline text="const davehttp = require (&quot;davehttp&quot;);"/>
				<outline text="const s3 = require (&quot;daves3&quot;);"/>
				<outline text="const utils = require (&quot;daveutils&quot;);"/>
				<outline text=""/>
				<outline text="var config = {">
					<outline text="port: process.env.PORT || 1424,"/>
					<outline text="flLogToConsole: true,"/>
					<outline text="flAllowAccessFromAnywhere: true, //12/17/19 by DW"/>
					<outline text="flTraceOnError: false, //davehttp does not try to catch the error" created="Fri, 16 Dec 2022 21:13:38 GMT"/>
					<outline text="s3Path: &quot;/static.scripting.com/counters/scripting/&quot;,"/>
					<outline text="fnameToday: &quot;today.json&quot;,"/>
					<outline text="fnameStats: &quot;stats.json&quot;,"/>
					<outline text="urlServerHomePageSource: &quot;http://scripting.com/code/counters/index.html&quot;"/>
					<outline text="};"/>
					</outline>
				<outline text="var stats = { ">
					<outline text="ctHits: 0,"/>
					<outline text="ctHitsToday: 0,"/>
					<outline text="ctLaunches: 0,"/>
					<outline text="ctDayRollovers: 0,"/>
					<outline text="ctSaves: 0,"/>
					<outline text="whenLastDayRollover: new Date (),"/>
					<outline text="whenLastLaunch: new Date (),"/>
					<outline text="whenLastHit: new Date (0),"/>
					<outline text="whenLastSave: new Date (0),"/>
					<outline text="product: myProductName + &quot; v&quot; + myVersion, //11/17/19 by DW"/>
					<outline text="referrers: [],"/>
					<outline text="pages: []"/>
					<outline text="};"/>
					</outline>
				<outline text="var flStatsChanged = false;"/>
				<outline text=""/>
				<outline text="function statsChanged () {">
					<outline text="flStatsChanged = true;"/>
					<outline text="}"/>
					</outline>
				<outline text="function saveStats () {">
					<outline text="var s3Path = config.s3Path + config.fnameToday;"/>
					<outline text="var s3ArchivePath = config.s3Path + utils.getDatePath (undefined, false) + &quot;.json&quot;;"/>
					<outline text="stats.ctSaves++;"/>
					<outline text="stats.whenLastSave = new Date ();"/>
					<outline text="stats.product = myProductName + &quot; v&quot; + myVersion;"/>
					<outline text="var jsontext = utils.jsonStringify (stats);"/>
					<outline text="function save (s3Path) {">
						<outline text="console.log (&quot;saveStats: s3Path == &quot; + s3Path);" isComment="true"/>
						<outline text="s3.newObject (s3Path, jsontext, &quot;application/json&quot;, &quot;public-read&quot;, function (err, data) {">
							<outline text="if (err) {">
								<outline text="console.log (&quot;saveStats: s3path == &quot; + s3path + &quot;, err.message == &quot; + err.message);"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="console.log (&quot;saveStats: s3path == &quot; + s3path);" isComment="true"/>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="save (s3Path);"/>
					<outline text="save (s3ArchivePath);"/>
					<outline text="utils.sureFilePath (config.fnameStats, function () {">
						<outline text="fs.writeFile (config.fnameStats, jsontext, function (err) {">
							<outline text="});"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function derefUrl (urlOrig, callback) {">
					<outline text="var theRequest = {" created="Thu, 31 Jul 2014 16:39:00 GMT" pgfnum="43066">
						<outline text="method: &quot;HEAD&quot;, " created="Thu, 31 Jul 2014 16:39:06 GMT" pgfnum="43067"/>
						<outline text="url: urlOrig, " created="Thu, 31 Jul 2014 16:39:22 GMT" pgfnum="43070"/>
						<outline text="followAllRedirects: true," created="Thu, 31 Jul 2014 16:39:18 GMT" pgfnum="43069"/>
						<outline text="maxRedirects: 5,"/>
						<outline text="headers: {">
							<outline text="&quot;User-Agent&quot;: myProductName + &quot; v&quot; + myVersion"/>
							<outline text="}"/>
							</outline>
						<outline text="};" created="Thu, 31 Jul 2014 16:39:13 GMT" pgfnum="43068"/>
						</outline>
					<outline text="request (theRequest, function (err, response) {">
						<outline text="if (err) {" created="Thu, 31 Jul 2014 16:39:35 GMT" pgfnum="43071">
							<outline text="callback (err, urlOrig);"/>
							<outline text="}" created="Thu, 31 Jul 2014 16:39:38 GMT" pgfnum="43072"/>
							</outline>
						<outline text="else {" created="Thu, 31 Jul 2014 16:39:39 GMT" pgfnum="43073">
							<outline text="var urlDeref = response.request.href;"/>
							<outline text="console.log (&quot;derefUrl: urlOrig == &quot; + urlOrig + &quot;, urlDeref == &quot; + urlDeref);" isComment="true"/>
							<outline text="callback (undefined, urlDeref);"/>
							<outline text="}" created="Thu, 31 Jul 2014 16:39:41 GMT" pgfnum="43074"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function removeOauthParams (url) { //2/17/22 by DW" created="Thu, 17 Feb 2022 22:24:37 GMT">
					<outline text="if (url !== undefined) {" created="Wed, 20 Sep 2023 13:47:45 GMT">
						<outline text="var baseurl = utils.stringNthField (url, &quot;?&quot;, 1);" created="Thu, 17 Feb 2022 22:34:32 GMT"/>
						<outline text="var params = utils.stringNthField (url, &quot;?&quot;, 2);"/>
						<outline text="if (params.length == 0) {" created="Thu, 17 Feb 2022 22:26:05 GMT">
							<outline text="return (url);" created="Thu, 17 Feb 2022 22:26:26 GMT"/>
							<outline text="}" created="Thu, 17 Feb 2022 22:26:30 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 17 Feb 2022 22:26:31 GMT">
							<outline text="var splits = params.split (&quot;&amp;&quot;), newparams = &quot;&quot;;"/>
							<outline text="splits.forEach (function (param) {">
								<outline text="if (!utils.beginsWith (param, &quot;oauth_token&quot;)) {">
									<outline text="newparams += param + &quot;&amp;&quot;;"/>
									<outline text="}"/>
									</outline>
								<outline text="});"/>
								</outline>
							<outline text="if (newparams.length == 0) {" created="Thu, 17 Feb 2022 22:27:44 GMT">
								<outline text="return (baseurl);" created="Thu, 17 Feb 2022 22:27:58 GMT"/>
								<outline text="}" created="Thu, 17 Feb 2022 22:27:51 GMT"/>
								</outline>
							<outline text="else {" created="Thu, 17 Feb 2022 22:28:12 GMT">
								<outline text="return (baseurl + &quot;?&quot; + utils.stringDelete (newparams, newparams.length, 1));" created="Thu, 17 Feb 2022 22:28:14 GMT"/>
								<outline text="}" created="Thu, 17 Feb 2022 22:32:29 GMT"/>
								</outline>
							<outline text="}" created="Thu, 17 Feb 2022 22:26:33 GMT"/>
							</outline>
						<outline text="}" created="Wed, 20 Sep 2023 13:47:51 GMT"/>
						</outline>
					<outline text="}" created="Thu, 17 Feb 2022 22:25:00 GMT"/>
					</outline>
				<outline text="function securityCheck (url) { //2/25/20 by DW" isComment="true">
					<outline text="Changes" isComment="true">
						<outline text="2/25/20; 10:06:16 AM by DW">
							<outline text="If there's an oauth_token or oauth_token_secret param, do not display the item."/>
							</outline>
						</outline>
					<outline text="var params = utils.stringNthField (url, &quot;?&quot;, 2);"/>
					<outline text="var splits = params.split (&quot;&amp;&quot;);"/>
					<outline text="var flproblem = false;"/>
					<outline text="splits.forEach (function (param) {">
						<outline text="if (utils.beginsWith (param, &quot;oauth_token&quot;)) {">
							<outline text="flproblem = true;"/>
							<outline text="}"/>
							</outline>
						<outline text="if (utils.beginsWith (param, &quot;oauth_token_secret&quot;)) {">
							<outline text="flproblem = true;"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="if (flproblem) {" isComment="true">
						<outline text="console.log (url);"/>
						<outline text="}"/>
						</outline>
					<outline text="return (!flproblem);"/>
					<outline text="}"/>
					</outline>
				<outline text="function count (group, referOrig, url, callback) {">
					<outline text="Changes" isComment="true" created="Thu, 17 Feb 2022 22:21:02 GMT">
						<outline text="2/17/22; 5:21:05 PM by DW" created="Thu, 17 Feb 2022 22:21:04 GMT">
							<outline text="Always call the callback." created="Thu, 17 Feb 2022 22:21:06 GMT"/>
							</outline>
						</outline>
					<outline text="referOrig = removeOauthParams (referOrig);" created="Thu, 17 Feb 2022 22:29:13 GMT"/>
					<outline text="url = removeOauthParams (url);" created="Thu, 17 Feb 2022 22:29:13 GMT"/>
					<outline text="derefUrl (referOrig, function (err, referer) {">
						<outline text="var flnotfound;"/>
						<outline text="//referrers">
							<outline text="if (referer === undefined) { //9/20/23 by DW" created="Wed, 20 Sep 2023 14:21:23 GMT">
								<outline text="referer = &quot;&quot;;" created="Wed, 20 Sep 2023 14:21:40 GMT"/>
								<outline text="}" created="Wed, 20 Sep 2023 14:21:43 GMT"/>
								</outline>
							<outline text="if (referer.length &gt; 0) {">
								<outline text="console.log (&quot;count: referer == &quot; + referer + &quot;, url == &quot; + url); //9/16/23 by DW"/>
								<outline text="flnotfound = true;"/>
								<outline text="stats.referrers.forEach (function (item) {">
									<outline text="if (item.url == referer) {">
										<outline text="item.ct++;"/>
										<outline text="flnotfound = false;"/>
										<outline text="}"/>
										</outline>
									<outline text="});"/>
									</outline>
								<outline text="if (flnotfound) {">
									<outline text="stats.referrers.push ({">
										<outline text="ct: 1,"/>
										<outline text="url: referer"/>
										<outline text="});"/>
										</outline>
									<outline text="}"/>
									</outline>
								<outline text="stats.referrers.sort (function (a, b) {" created="Thu, 06 Feb 2014 00:32:33 GMT" pgfnum="37095">
									<outline text="if (b.ct &lt; a.ct) {" created="Thu, 06 Feb 2014 00:34:58 GMT" pgfnum="37098">
										<outline text="return (-1);" created="Thu, 06 Feb 2014 00:35:12 GMT" pgfnum="37101"/>
										<outline text="}" created="Thu, 06 Feb 2014 00:35:16 GMT" pgfnum="37102"/>
										</outline>
									<outline text="else {" created="Thu, 06 Feb 2014 00:35:17 GMT" pgfnum="37103">
										<outline text="if (a.ct &lt; b.ct) {" created="Thu, 06 Feb 2014 00:35:53 GMT" pgfnum="37106">
											<outline text="return (1)" created="Thu, 06 Feb 2014 00:35:20 GMT" pgfnum="37104"/>
											<outline text="}" created="Thu, 06 Feb 2014 00:36:06 GMT" pgfnum="37107"/>
											</outline>
										<outline text="else {" created="Thu, 06 Feb 2014 00:36:08 GMT" pgfnum="37108">
											<outline text="return (0);" created="Thu, 06 Feb 2014 00:36:10 GMT" pgfnum="37109"/>
											<outline text="}" created="Thu, 06 Feb 2014 00:36:14 GMT" pgfnum="37110"/>
											</outline>
										<outline text="}" created="Thu, 06 Feb 2014 00:35:23 GMT" pgfnum="37105"/>
										</outline>
									<outline text="});" created="Thu, 06 Feb 2014 00:34:52 GMT" pgfnum="37096"/>
									</outline>
								<outline text="}"/>
								</outline>
							</outline>
						<outline text="//pages">
							<outline text="flnotfound = true;"/>
							<outline text="stats.pages.forEach (function (item) {">
								<outline text="if (item.url == url) {">
									<outline text="item.ct++;"/>
									<outline text="flnotfound = false;"/>
									<outline text="}"/>
									</outline>
								<outline text="});"/>
								</outline>
							<outline text="if (flnotfound) {">
								<outline text="stats.pages.push ({">
									<outline text="ct: 1,"/>
									<outline text="url: url"/>
									<outline text="});"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="stats.pages.sort (function (a, b) {" created="Thu, 06 Feb 2014 00:32:33 GMT" pgfnum="37095">
								<outline text="if (b.ct &lt; a.ct) {" created="Thu, 06 Feb 2014 00:34:58 GMT" pgfnum="37098">
									<outline text="return (-1);" created="Thu, 06 Feb 2014 00:35:12 GMT" pgfnum="37101"/>
									<outline text="}" created="Thu, 06 Feb 2014 00:35:16 GMT" pgfnum="37102"/>
									</outline>
								<outline text="else {" created="Thu, 06 Feb 2014 00:35:17 GMT" pgfnum="37103">
									<outline text="if (a.ct &lt; b.ct) {" created="Thu, 06 Feb 2014 00:35:53 GMT" pgfnum="37106">
										<outline text="return (1)" created="Thu, 06 Feb 2014 00:35:20 GMT" pgfnum="37104"/>
										<outline text="}" created="Thu, 06 Feb 2014 00:36:06 GMT" pgfnum="37107"/>
										</outline>
									<outline text="else {" created="Thu, 06 Feb 2014 00:36:08 GMT" pgfnum="37108">
										<outline text="return (0);" created="Thu, 06 Feb 2014 00:36:10 GMT" pgfnum="37109"/>
										<outline text="}" created="Thu, 06 Feb 2014 00:36:14 GMT" pgfnum="37110"/>
										</outline>
									<outline text="}" created="Thu, 06 Feb 2014 00:35:23 GMT" pgfnum="37105"/>
									</outline>
								<outline text="});" created="Thu, 06 Feb 2014 00:34:52 GMT" pgfnum="37096"/>
								</outline>
							</outline>
						<outline text="statsChanged ();"/>
						<outline text="});"/>
						</outline>
					<outline text="callback (undefined, &quot;We got your ping on &quot; + new Date ().toUTCString ());"/>
					<outline text="}"/>
					</outline>
				<outline text="" created="Sat, 16 Sep 2023 21:35:38 GMT"/>
				<outline text="function handleHttpRequest (theRequest) {" created="Sat, 16 Sep 2023 21:35:39 GMT">
					<outline text="var params = theRequest.params;"/>
					<outline text="function bumpstats () {" created="Sat, 16 Sep 2023 21:36:42 GMT">
						<outline text="stats.ctHits++;"/>
						<outline text="stats.ctHitsToday++;"/>
						<outline text="stats.whenLastHit = new Date ();"/>
						<outline text="statsChanged ();"/>
						<outline text="}" created="Sat, 16 Sep 2023 21:36:46 GMT"/>
						</outline>
					<outline text="function returnHtml (htmltext) {">
						<outline text="theRequest.httpReturn (200, &quot;text/html&quot;, htmltext);"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnPlainText (s) {">
						<outline text="theRequest.httpReturn (200, &quot;text/plain&quot;, s.toString ());"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnData (jstruct) {">
						<outline text="if (jstruct === undefined) {">
							<outline text="jstruct = {};"/>
							<outline text="}"/>
							</outline>
						<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnError (jstruct) {">
						<outline text="theRequest.httpReturn (500, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}"/>
						</outline>
					<outline text="function httpReturn (err, jstruct) {">
						<outline text="if (err) {">
							<outline text="returnError (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="returnData (jstruct);"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function returnServerHomePage () {">
						<outline text="request (config.urlServerHomePageSource, function (error, response, templatetext) {">
							<outline text="if (!error &amp;&amp; response.statusCode == 200) {">
								<outline text="var pagetable = {">
									<outline text="version: myVersion"/>
									<outline text="};"/>
									</outline>
								<outline text="var pagetext = utils.multipleReplaceAll (templatetext, pagetable, false, &quot;[%&quot;, &quot;%]&quot;);"/>
								<outline text="returnHtml (pagetext);"/>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="switch (theRequest.lowerpath) {">
						<outline text="case &quot;/&quot;:">
							<outline text="returnServerHomePage ();"/>
							<outline text="return (true);"/>
							</outline>
						<outline text="case &quot;/version&quot;:" created="Wed, 22 Jan 2014 15:18:23 GMT" pgfnum="36265">
							<outline text="returnPlainText (myVersion);"/>
							<outline text="return (true);" created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
							</outline>
						<outline text="case &quot;/now&quot;:" created="Sat, 08 Feb 2014 16:43:58 GMT" pgfnum="37236">
							<outline text="returnPlainText (new Date ());"/>
							<outline text="return (true);" created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
							</outline>
						<outline text="case &quot;/counter&quot;: case &quot;/hello&quot;: //1/30/23 by DW" created="Sat, 08 Feb 2014 16:43:58 GMT" pgfnum="37236">
							<outline text="console.log (&quot;params == &quot; + utils.jsonStringify (params));" isComment="true" created="Sat, 16 Sep 2023 21:47:31 GMT"/>
							<outline text="count (params.group, params.referer, params.url, httpReturn);"/>
							<outline text="return (true);" created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
							</outline>
						<outline text="default: " created="Sat, 16 Sep 2023 21:37:39 GMT">
							<outline text="theRequest.httpReturn (404, &quot;text/plain&quot;, &quot;Not found.&quot;);"/>
							<outline text="return (true);" created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="bumpstats ();"/>
					<outline text="}" created="Sat, 16 Sep 2023 21:35:48 GMT"/>
					</outline>
				<outline text="" created="Sat, 16 Sep 2023 21:35:39 GMT"/>
				<outline text="function readStats (callback) {">
					<outline text="utils.sureFilePath (config.fnameStats, function () {">
						<outline text="fs.readFile (config.fnameStats, function (err, data) {">
							<outline text="if (!err) {">
								<outline text="try {">
									<outline text="var jstruct = JSON.parse (data.toString ());"/>
									<outline text="console.log (utils.jsonStringify (jstruct)); " isComment="true"/>
									<outline text="for (var x in jstruct) {">
										<outline text="stats [x] = jstruct [x];"/>
										<outline text="}"/>
										</outline>
									<outline text="}"/>
									</outline>
								<outline text="catch (err) {">
									<outline text="console.log (&quot;readStats: err == &quot; + err.message);" isComment="true"/>
									<outline text="}"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="if (callback !== undefined) {">
								<outline text="callback ();"/>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function everyMinute () {">
					<outline text="var now = new Date ();"/>
					<outline text="console.log (&quot;everyMinute: &quot; + now.toLocaleString ());" isComment="true"/>
					<outline text="if (!utils.sameDay (stats.whenLastDayRollover, now)) { //date rollover" created="Mon, 03 Feb 2014 18:45:55 GMT" pgfnum="36993">
						<outline text="console.log (&quot;everyMinute: day rollover.&quot;);"/>
						<outline text="stats.ctDayRollovers++;"/>
						<outline text="stats.whenLastDayRollover = now;" created="Wed, 12 Feb 2014 15:57:43 GMT" pgfnum="37575"/>
						<outline text="stats.ctHitsToday = 0;"/>
						<outline text="stats.referrers = new Array ();"/>
						<outline text="stats.pages = new Array ();"/>
						<outline text="statsChanged ();"/>
						<outline text="}" created="Mon, 03 Feb 2014 18:46:08 GMT" pgfnum="36994"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function everySecond () {">
					<outline text="if (flStatsChanged) {">
						<outline text="flStatsChanged = false;"/>
						<outline text="saveStats ();"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text=""/>
				<outline text="console.log (&quot;\n&quot; + myProductName + &quot; v&quot; + myVersion);" created="Mon, 03 Feb 2014 18:54:58 GMT" pgfnum="36999"/>
				<outline text="if (process.env.PORT !== undefined) {">
					<outline text="config.port = process.env.PORT;"/>
					<outline text="}"/>
					</outline>
				<outline text="readStats (function () {">
					<outline text="stats.ctLaunches++;"/>
					<outline text="stats.whenLastLaunch = new Date ();"/>
					<outline text="statsChanged ();"/>
					<outline text="davehttp.start (config, handleHttpRequest);"/>
					<outline text="setInterval (everySecond, 1000); "/>
					<outline text="utils.runEveryMinute (everyMinute);"/>
					<outline text="});"/>
					</outline>
				</outline>
			<outline text="config.json" isComment="true">
				<outline text="{">
					<outline text="&quot;blacklist&quot;: [">
						<outline text="&quot;olynon.com&quot;"/>
						<outline text="]"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="forever.json" isComment="true">
				<outline text="{">
					<outline text="&quot;script&quot;: &quot;counters.js&quot;,"/>
					<outline text="&quot;domain&quot;: &quot;counters.scripting.com&quot;,"/>
					<outline text="&quot;enabled&quot;: true"/>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="readme.md">
				<outline text="## counters">
					<outline text="A simple Node app to track hits and referrers."/>
					</outline>
				</outline>
			</outline>
		<outline text="/scripting.com/code/counters/">
			<outline text="code.js">
				<outline text="const blockedDomains = [&quot;w6az.com&quot;, &quot;oldschool.scripting.com&quot;, &quot;brandontoner.ca&quot;]; //11/27/20 by DW"/>
				<outline text=""/>
				<outline text="var countersdata;" created="Thu, 06 Feb 2014 00:22:57 GMT" pgfnum="37085"/>
				<outline text="" created="Thu, 06 Feb 2014 00:54:06 GMT" pgfnum="37127"/>
				<outline text="var maxUrlLenForDisplay = 60;" created="Thu, 06 Feb 2014 00:53:55 GMT" pgfnum="37126"/>
				<outline text="" created="Thu, 06 Feb 2014 23:54:06 GMT" pgfnum="37176"/>
				<outline text="var myGroupName = &quot;scripting&quot;;" created="Thu, 06 Feb 2014 23:54:07 GMT" pgfnum="37177"/>
				<outline text="" created="Sun, 09 Feb 2014 16:56:12 GMT" pgfnum="37302"/>
				<outline text="var whichArrayToDisplay = &quot;Pages&quot;;" created="Sun, 09 Feb 2014 16:56:13 GMT" pgfnum="37303"/>
				<outline text="" created="Thu, 06 Feb 2014 23:56:40 GMT" pgfnum="37179"/>
				<outline text="var whenLastUpdate = &quot;&quot;, ctUpdates = 0, ctChecks = 0;" created="Thu, 06 Feb 2014 23:56:40 GMT" pgfnum="37180"/>
				<outline text=""/>
				<outline text="function decodeUriComponent (theComponent) { //4/20/23 by DW" created="Thu, 20 Apr 2023 20:23:54 GMT">
					<outline text="try { //4/20/23 by DW" created="Thu, 20 Apr 2023 20:22:25 GMT">
						<outline text="return (decodeURIComponent (theComponent));"/>
						<outline text="}" created="Thu, 20 Apr 2023 20:22:27 GMT"/>
						</outline>
					<outline text="catch (err) {" created="Thu, 20 Apr 2023 20:22:31 GMT">
						<outline text="return (theComponent);"/>
						<outline text="}" created="Thu, 20 Apr 2023 20:22:35 GMT"/>
						</outline>
					<outline text="}" created="Thu, 20 Apr 2023 20:24:10 GMT"/>
					</outline>
				<outline text="" created="Thu, 06 Feb 2014 00:22:59 GMT" pgfnum="37086"/>
				<outline text="function looksLikeUrl (s) { //12/31/19 by DW">
					<outline text="s = s.toLowerCase ();"/>
					<outline text="if (beginsWith (s, &quot;http://&quot;) || beginsWith (s, &quot;https://&quot;)) {">
						<outline text="return (true);"/>
						<outline text="}"/>
						</outline>
					<outline text="return (false);"/>
					<outline text="}"/>
					</outline>
				<outline text="function processTitleParam (url) { //1/6/20 by DW">
					<outline text="if (stringContains (url, &quot;title=&quot;)) {">
						<outline text="var searchparams = &quot;?&quot; + stringNthField (url, &quot;?&quot;, 2);"/>
						<outline text="function getparam (name) {">
							<outline text="return (decodeURI ((RegExp(name + '=' + '(.+?)(&amp;|$)').exec(searchparams)||[,null])[1]));"/>
							<outline text="}"/>
							</outline>
						<outline text="var title = getparam (&quot;title&quot;);"/>
						<outline text="if (title != &quot;null&quot;) {">
							<outline text="return (decodeUriComponent (title)); //4/20/23 by DW"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="return (url);"/>
					<outline text="}"/>
					</outline>
				<outline text="function securityCheck (url) { //2/25/20 by DW">
					<outline text="Changes" isComment="true">
						<outline text="2/25/20; 10:06:16 AM by DW">
							<outline text="If there's an oauth_token or oauth_token_secret param, do not display the item."/>
							</outline>
						</outline>
					<outline text="var flproblem = false;"/>
					<outline text="if (url !== undefined) {" created="Thu, 21 Sep 2023 00:44:25 GMT">
						<outline text="var params = stringNthField (url, &quot;?&quot;, 2);"/>
						<outline text="var splits = params.split (&quot;&amp;&quot;);"/>
						<outline text="splits.forEach (function (param) {">
							<outline text="if (beginsWith (param, &quot;oauth_token&quot;)) {">
								<outline text="flproblem = true;"/>
								<outline text="}"/>
								</outline>
							<outline text="if (beginsWith (param, &quot;oauth_token_secret&quot;)) {">
								<outline text="flproblem = true;"/>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="if (flproblem) {">
							<outline text="console.log (url);"/>
							<outline text="}"/>
							</outline>
						<outline text="}" created="Thu, 21 Sep 2023 00:44:31 GMT"/>
						</outline>
					<outline text="return (!flproblem);"/>
					<outline text="}"/>
					</outline>
				<outline text=""/>
				<outline text="function okDomain (url) { //11/27/20 by DW">
					<outline text="var domain = stringLower (getDomainFromUrl (url)), flblocked = false;"/>
					<outline text="blockedDomains.forEach (function (d) {">
						<outline text="if (stringLower (d) == domain) {">
							<outline text="flblocked = true;"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="return (!flblocked);"/>
					<outline text="}"/>
					</outline>
				<outline text=""/>
				<outline text="function formatDate (theDate, dateformat, timezone) {" created="Wed, 04 Dec 2013 19:46:43 GMT" pgfnum="33129">
					<outline text="try {" created="Thu, 13 Jun 2013 22:19:31 GMT" pgfnum="4655">
						<outline text="var offset = new Number (timezone);" created="Thu, 13 Jun 2013 21:39:14 GMT" pgfnum="4646"/>
						<outline text="var d = new Date (theDate);" created="Thu, 13 Jun 2013 21:24:44 GMT" pgfnum="4636"/>
						<outline text="var localTime = d.getTime ();" created="Thu, 13 Jun 2013 21:29:10 GMT" pgfnum="4638"/>
						<outline text="var localOffset = d.getTimezoneOffset () *  60000;" created="Thu, 13 Jun 2013 21:29:18 GMT" pgfnum="4639"/>
						<outline text="var utc = localTime + localOffset;" created="Thu, 13 Jun 2013 21:30:17 GMT" pgfnum="4640"/>
						<outline text="var newTime = utc + (3600000 * offset);"/>
						<outline text="return (new Date (newTime).strftime (dateformat));" created="Thu, 13 Jun 2013 21:31:02 GMT" pgfnum="4641"/>
						<outline text="}" created="Thu, 13 Jun 2013 22:19:58 GMT" pgfnum="4659"/>
						</outline>
					<outline text="catch (tryerror) {" created="Thu, 13 Jun 2013 22:19:41 GMT" pgfnum="4656">
						<outline text="return (new Date (theDate).strftime (dateformat));" created="Thu, 13 Jun 2013 22:19:50 GMT" pgfnum="4657"/>
						<outline text="}" created="Thu, 13 Jun 2013 22:19:51 GMT" pgfnum="4658"/>
						</outline>
					<outline text="}" created="Wed, 04 Dec 2013 19:47:03 GMT" pgfnum="33133"/>
					</outline>
				<outline text="" created="Fri, 04 Nov 2022 13:54:55 GMT"/>
				<outline text="function httpRequest (url, callback) {">
					<outline text="Changes" isComment="true">
						<outline text="7/22/22; 12:30:36 PM by DW" created="Fri, 22 Jul 2022 16:30:36 GMT">
							<outline text="If there's no message, say there was a communication error. We have to say something. ;-)" created="Fri, 22 Jul 2022 16:30:37 GMT"/>
							</outline>
						<outline text="9/18/21; 10:47:11 AM by DW" created="Sat, 18 Sep 2021 14:47:10 GMT">
							<outline text="When there's an error, usually there is a status.responseText to parse as JSON, but sometimes it fails. Now we account for that. " created="Sat, 18 Sep 2021 14:47:11 GMT"/>
							</outline>
						<outline text="7/20/20; 5:36:14 PM by DW">
							<outline text="Finally, I need a HTTP request routine that calls back in a standard way.">
								<outline text="function (err, data)"/>
								</outline>
							<outline text="No, I don't want to use promises."/>
							<outline text="for info about timeous see this page." isComment="true">
								<outline text="http://stackoverflow.com/questions/3543683/determine-if-ajax-error-is-a-timeout"/>
								</outline>
							</outline>
						</outline>
					<outline text="var timeout = 3000;"/>
					<outline text="var headers = new Object ();" created="Fri, 04 Nov 2022 13:57:20 GMT"/>
					<outline text="var jxhr = $.ajax ({ ">
						<outline text="url: url,"/>
						<outline text="dataType: &quot;text&quot;, "/>
						<outline text="headers," created="Tue, 14 May 2013 14:35:06 GMT" pgfnum="23850"/>
						<outline text="timeout"/>
						<outline text="}) "/>
						</outline>
					<outline text=".success (function (data, status) { ">
						<outline text="callback (undefined, data);"/>
						<outline text="}) "/>
						</outline>
					<outline text=".error (function (status) { ">
						<outline text="var message;" created="Sat, 18 Sep 2021 14:45:42 GMT"/>
						<outline text="try { //9/18/21 by DW" created="Sat, 18 Sep 2021 14:45:52 GMT">
							<outline text="message = JSON.parse (status.responseText).message;" created="Sat, 18 Sep 2021 14:46:09 GMT"/>
							<outline text="}" created="Sat, 18 Sep 2021 14:45:55 GMT"/>
							</outline>
						<outline text="catch (err) {" created="Sat, 18 Sep 2021 14:45:57 GMT">
							<outline text="message = status.responseText;" created="Sat, 18 Sep 2021 14:46:25 GMT"/>
							<outline text="}" created="Sat, 18 Sep 2021 14:46:00 GMT"/>
							</outline>
						<outline text="if ((message === undefined) || (message.length == 0)) { //7/22/22 by DW &amp; 8/31/22 by DW" created="Fri, 22 Jul 2022 16:29:46 GMT">
							<outline text="message = &quot;There was an error communicating with the server.&quot;;" created="Fri, 22 Jul 2022 16:30:07 GMT"/>
							<outline text="}" created="Fri, 22 Jul 2022 16:29:57 GMT"/>
							</outline>
						<outline text="var err = {">
							<outline text="code: status.status,"/>
							<outline text="message"/>
							<outline text="};"/>
							</outline>
						<outline text="callback (err);"/>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function viewTodaysHits (groupname=&quot;scripting&quot;) {" created="Fri, 04 Nov 2022 13:54:55 GMT">
					<outline text="var url = &quot;//s3.amazonaws.com/static.scripting.com/counters/&quot; + groupname + &quot;/today.json&quot;;" created="Fri, 04 Nov 2022 13:55:04 GMT"/>
					<outline text="var url = &quot;http://static.scripting.com/counters/&quot; + groupname + &quot;/today.json&quot;;" isComment="true" created="Fri, 04 Nov 2022 13:55:04 GMT"/>
					<outline text="httpRequest (url, function (err, jsontext) {" created="Fri, 04 Nov 2022 13:57:31 GMT">
						<outline text="if (err) {" created="Fri, 04 Nov 2022 13:57:45 GMT">
							<outline text="console.log (err.message);" created="Fri, 04 Nov 2022 13:57:47 GMT"/>
							<outline text="}" created="Fri, 04 Nov 2022 13:57:53 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 04 Nov 2022 13:57:53 GMT">
							<outline text="var s = &quot;&quot;;" created="Thu, 06 Feb 2014 00:49:25 GMT" pgfnum="37119"/>
							<outline text="" created="Thu, 06 Feb 2014 00:49:28 GMT" pgfnum="37120"/>
							<outline text="var countersdata = JSON.parse (jsontext);;" created="Thu, 06 Feb 2014 00:21:43 GMT" pgfnum="37083"/>
							<outline text="" created="Thu, 06 Feb 2014 23:56:59 GMT" pgfnum="37181"/>
							<outline text="if (countersdata.whenLastUpdate != whenLastUpdate) {" created="Thu, 06 Feb 2014 23:56:59 GMT" pgfnum="37182">
								<outline text="var ix = whichArrayToDisplay.toLowerCase ();" created="Sun, 09 Feb 2014 17:00:26 GMT" pgfnum="37305"/>
								<outline text="" created="Sun, 09 Feb 2014 17:00:27 GMT" pgfnum="37308"/>
								<outline text="countersdata [ix].sort (function (a, b) {" created="Thu, 06 Feb 2014 00:32:33 GMT" pgfnum="37095">
									<outline text="if (b.ct &lt; a.ct) {" created="Thu, 06 Feb 2014 00:34:58 GMT" pgfnum="37098">
										<outline text="return (-1);" created="Thu, 06 Feb 2014 00:35:12 GMT" pgfnum="37101"/>
										<outline text="}" created="Thu, 06 Feb 2014 00:35:16 GMT" pgfnum="37102"/>
										</outline>
									<outline text="else {" created="Thu, 06 Feb 2014 00:35:17 GMT" pgfnum="37103">
										<outline text="if (a.ct &lt; b.ct) {" created="Thu, 06 Feb 2014 00:35:53 GMT" pgfnum="37106">
											<outline text="return (1)" created="Thu, 06 Feb 2014 00:35:20 GMT" pgfnum="37104"/>
											<outline text="}" created="Thu, 06 Feb 2014 00:36:06 GMT" pgfnum="37107"/>
											</outline>
										<outline text="else {" created="Thu, 06 Feb 2014 00:36:08 GMT" pgfnum="37108">
											<outline text="return (0);" created="Thu, 06 Feb 2014 00:36:10 GMT" pgfnum="37109"/>
											<outline text="}" created="Thu, 06 Feb 2014 00:36:14 GMT" pgfnum="37110"/>
											</outline>
										<outline text="}" created="Thu, 06 Feb 2014 00:35:23 GMT" pgfnum="37105"/>
										</outline>
									<outline text="});" created="Thu, 06 Feb 2014 00:34:52 GMT" pgfnum="37096"/>
									</outline>
								<outline text="for (var i = 0; i &lt; countersdata [ix].length; i++) {" created="Thu, 06 Feb 2014 00:40:28 GMT" pgfnum="37113">
									<outline text="var x = countersdata [ix] [i], urlForDisplay = x.url;" created="Thu, 06 Feb 2014 00:49:44 GMT" pgfnum="37121"/>
									<outline text="if (securityCheck (x.url)) {">
										<outline text="if (okDomain (x.url)) { //11/27/20 by DW">
											<outline text="if (urlForDisplay != undefined) {" created="Wed, 12 Feb 2014 19:10:47 GMT" pgfnum="37599">
												<outline text="if (looksLikeUrl (x.url)) { //12/31/19 by DW">
													<outline text="urlForDisplay = processTitleParam (urlForDisplay); //1/6/20 by DW"/>
													<outline text="if (urlForDisplay.length &gt; maxUrlLenForDisplay) {" created="Thu, 06 Feb 2014 00:53:01 GMT" pgfnum="37123">
														<outline text="urlForDisplay = stringMid (urlForDisplay, 1, maxUrlLenForDisplay) + &quot;...&quot;;" created="Thu, 06 Feb 2014 00:53:38 GMT" pgfnum="37125"/>
														<outline text="}" created="Thu, 06 Feb 2014 00:53:26 GMT" pgfnum="37124"/>
														</outline>
													<outline text="s += &quot;&lt;tr&gt;&lt;td&gt;&lt;a href=\&quot;&quot; + x.url + &quot;\&quot;&gt;&quot; + urlForDisplay + &quot;&lt;/a&gt;&lt;/td&gt;&lt;td class=\&quot;tdCt\&quot;&gt;&amp;nbsp;&quot; + x.ct + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;" created="Thu, 06 Feb 2014 00:48:31 GMT" pgfnum="37118"/>
													<outline text="}"/>
													</outline>
												<outline text="}" created="Wed, 12 Feb 2014 19:10:56 GMT" pgfnum="37600"/>
												</outline>
											<outline text="}"/>
											</outline>
										<outline text="}"/>
										</outline>
									<outline text="}" created="Thu, 06 Feb 2014 00:41:07 GMT" pgfnum="37115"/>
									</outline>
								<outline text="" created="Sun, 09 Feb 2014 16:57:09 GMT" pgfnum="37304"/>
								<outline text="document.getElementById (&quot;idCountsContainer&quot;).innerHTML = &quot;&lt;table class=\&quot;table table-striped tableCounts\&quot;&gt;&quot; + s + &quot;&lt;/table&gt;&quot;;"/>
								<outline text="document.getElementById (&quot;idTitle&quot;).innerHTML = whichArrayToDisplay + &quot; list for &lt;i&gt;&quot; + groupname + &quot;&lt;/i&gt; group&quot;;"/>
								<outline text="" created="Sun, 09 Feb 2014 04:45:46 GMT" pgfnum="37272"/>
								<outline text="//last update display" created="Sun, 09 Feb 2014 04:45:48 GMT" pgfnum="37273">
									<outline text="var d = new Date (countersdata.whenLastHit);" created="Sun, 09 Feb 2014 04:46:04 GMT" pgfnum="37274"/>
									<outline text="document.getElementById (&quot;idWhenLastUpdate&quot;).innerHTML = &quot;&lt;b&gt;Last update&lt;/b&gt;: &quot; + formatDate (d, &quot;%A, %B %e, %Y at %l:%M %p&quot;, &quot;-5&quot;) + &quot;.&quot;;"/>
									</outline>
								<outline text="" created="Thu, 06 Feb 2014 23:57:50 GMT" pgfnum="37185"/>
								<outline text="whenLastUpdate = countersdata.whenLastUpdate;" created="Thu, 06 Feb 2014 23:57:35 GMT" pgfnum="37184"/>
								<outline text="" created="Thu, 06 Feb 2014 23:58:28 GMT" pgfnum="37186"/>
								<outline text="ctUpdates++;"/>
								<outline text="}" created="Thu, 06 Feb 2014 23:57:03 GMT" pgfnum="37183"/>
								</outline>
							<outline text="" created="Thu, 06 Feb 2014 00:21:48 GMT" pgfnum="37084"/>
							<outline text="document.getElementById (&quot;idCtChecks&quot;).innerHTML = ctUpdates + &quot; / &quot; + ++ctChecks;"/>
							<outline text="" created="Fri, 07 Feb 2014 02:49:44 GMT" pgfnum="37195"/>
							<outline text="console.log (&quot;viewTodaysHits call was successful.&quot;);" isComment="true" created="Mon, 03 Feb 2014 17:10:51 GMT" pgfnum="36951"/>
							<outline text="}" created="Fri, 04 Nov 2022 13:57:55 GMT"/>
							</outline>
						<outline text="});" created="Fri, 04 Nov 2022 13:57:39 GMT"/>
						</outline>
					<outline text="}" created="Fri, 04 Nov 2022 13:55:46 GMT"/>
					</outline>
				<outline text="function viewTodaysHits (groupname) {" isComment="true" created="Thu, 06 Feb 2014 00:19:34 GMT" pgfnum="37081">
					<outline text="var urlCounterServer = &quot;/getTodaysHits&quot;;"/>
					<outline text="var urlCounterServer = &quot;http://counter2.fargo.io:5337/getTodaysHits&quot;;" isComment="true"/>
					<outline text="var urlCounterServer = &quot;http://fargo-counter.herokuapp.com/getTodaysHits&quot;;" isComment="true" created="Mon, 03 Feb 2014 14:41:46 GMT" pgfnum="36881"/>
					<outline text="var urlCounterServer = &quot;http://boston.scripting.com:5337/getTodaysHits&quot;;" isComment="true" created="Mon, 03 Feb 2014 14:41:46 GMT" pgfnum="36881"/>
					<outline text="" created="Thu, 06 Feb 2014 22:54:32 GMT" pgfnum="37157"/>
					<outline text="if (groupname == undefined) {" created="Thu, 06 Feb 2014 22:54:32 GMT" pgfnum="37158">
						<outline text="groupname = myGroupName;" created="Thu, 06 Feb 2014 22:37:29 GMT" pgfnum="37152"/>
						<outline text="}" created="Thu, 06 Feb 2014 22:54:45 GMT" pgfnum="37159"/>
						</outline>
					<outline text="" created="Thu, 06 Feb 2014 22:37:15 GMT" pgfnum="37151"/>
					<outline text="var jxhr = $.ajax ({">
						<outline text="url: urlCounterServer + &quot;?group=&quot; + encodeURIComponent (groupname),"/>
						<outline text="dataType: &quot;jsonp&quot;,"/>
						<outline text="jsonpCallback : &quot;getData&quot;,"/>
						<outline text="timeout: 30000"/>
						<outline text="})"/>
						</outline>
					<outline text=".success (function (data, status, xhr) {">
						<outline text="var s = &quot;&quot;;" created="Thu, 06 Feb 2014 00:49:25 GMT" pgfnum="37119"/>
						<outline text="" created="Thu, 06 Feb 2014 00:49:28 GMT" pgfnum="37120"/>
						<outline text="countersdata = data;" created="Thu, 06 Feb 2014 00:21:43 GMT" pgfnum="37083"/>
						<outline text="" created="Thu, 06 Feb 2014 23:56:59 GMT" pgfnum="37181"/>
						<outline text="if (countersdata.whenLastUpdate != whenLastUpdate) {" created="Thu, 06 Feb 2014 23:56:59 GMT" pgfnum="37182">
							<outline text="var ix = whichArrayToDisplay.toLowerCase ();" created="Sun, 09 Feb 2014 17:00:26 GMT" pgfnum="37305"/>
							<outline text="" created="Sun, 09 Feb 2014 17:00:27 GMT" pgfnum="37308"/>
							<outline text="countersdata [ix].sort (function (a, b) {" created="Thu, 06 Feb 2014 00:32:33 GMT" pgfnum="37095">
								<outline text="if (b.ct &lt; a.ct) {" created="Thu, 06 Feb 2014 00:34:58 GMT" pgfnum="37098">
									<outline text="return (-1);" created="Thu, 06 Feb 2014 00:35:12 GMT" pgfnum="37101"/>
									<outline text="}" created="Thu, 06 Feb 2014 00:35:16 GMT" pgfnum="37102"/>
									</outline>
								<outline text="else {" created="Thu, 06 Feb 2014 00:35:17 GMT" pgfnum="37103">
									<outline text="if (a.ct &lt; b.ct) {" created="Thu, 06 Feb 2014 00:35:53 GMT" pgfnum="37106">
										<outline text="return (1)" created="Thu, 06 Feb 2014 00:35:20 GMT" pgfnum="37104"/>
										<outline text="}" created="Thu, 06 Feb 2014 00:36:06 GMT" pgfnum="37107"/>
										</outline>
									<outline text="else {" created="Thu, 06 Feb 2014 00:36:08 GMT" pgfnum="37108">
										<outline text="return (0);" created="Thu, 06 Feb 2014 00:36:10 GMT" pgfnum="37109"/>
										<outline text="}" created="Thu, 06 Feb 2014 00:36:14 GMT" pgfnum="37110"/>
										</outline>
									<outline text="}" created="Thu, 06 Feb 2014 00:35:23 GMT" pgfnum="37105"/>
									</outline>
								<outline text="});" created="Thu, 06 Feb 2014 00:34:52 GMT" pgfnum="37096"/>
								</outline>
							<outline text="for (var i = 0; i &lt; countersdata [ix].length; i++) {" created="Thu, 06 Feb 2014 00:40:28 GMT" pgfnum="37113">
								<outline text="var x = countersdata [ix] [i], urlForDisplay = x.url;" created="Thu, 06 Feb 2014 00:49:44 GMT" pgfnum="37121"/>
								<outline text="if (securityCheck (x.url)) {">
									<outline text="if (okDomain (x.url)) { //11/27/20 by DW">
										<outline text="if (urlForDisplay != undefined) {" created="Wed, 12 Feb 2014 19:10:47 GMT" pgfnum="37599">
											<outline text="if (looksLikeUrl (x.url)) { //12/31/19 by DW">
												<outline text="urlForDisplay = processTitleParam (urlForDisplay); //1/6/20 by DW"/>
												<outline text="if (urlForDisplay.length &gt; maxUrlLenForDisplay) {" created="Thu, 06 Feb 2014 00:53:01 GMT" pgfnum="37123">
													<outline text="urlForDisplay = stringMid (urlForDisplay, 1, maxUrlLenForDisplay) + &quot;...&quot;;" created="Thu, 06 Feb 2014 00:53:38 GMT" pgfnum="37125"/>
													<outline text="}" created="Thu, 06 Feb 2014 00:53:26 GMT" pgfnum="37124"/>
													</outline>
												<outline text="s += &quot;&lt;tr&gt;&lt;td&gt;&lt;a href=\&quot;&quot; + x.url + &quot;\&quot;&gt;&quot; + urlForDisplay + &quot;&lt;/a&gt;&lt;/td&gt;&lt;td class=\&quot;tdCt\&quot;&gt;&amp;nbsp;&quot; + x.ct + &quot;&lt;/td&gt;&lt;/tr&gt;&quot;;" created="Thu, 06 Feb 2014 00:48:31 GMT" pgfnum="37118"/>
												<outline text="}"/>
												</outline>
											<outline text="}" created="Wed, 12 Feb 2014 19:10:56 GMT" pgfnum="37600"/>
											</outline>
										<outline text="}"/>
										</outline>
									<outline text="}"/>
									</outline>
								<outline text="}" created="Thu, 06 Feb 2014 00:41:07 GMT" pgfnum="37115"/>
								</outline>
							<outline text="" created="Sun, 09 Feb 2014 16:57:09 GMT" pgfnum="37304"/>
							<outline text="document.getElementById (&quot;idCountsContainer&quot;).innerHTML = &quot;&lt;table class=\&quot;table table-striped tableCounts\&quot;&gt;&quot; + s + &quot;&lt;/table&gt;&quot;;"/>
							<outline text="document.getElementById (&quot;idTitle&quot;).innerHTML = whichArrayToDisplay + &quot; list for &lt;i&gt;&quot; + groupname + &quot;&lt;/i&gt; group&quot;;"/>
							<outline text="" created="Sun, 09 Feb 2014 04:45:46 GMT" pgfnum="37272"/>
							<outline text="//last update display" created="Sun, 09 Feb 2014 04:45:48 GMT" pgfnum="37273">
								<outline text="var d = new Date (countersdata.whenLastHit);" created="Sun, 09 Feb 2014 04:46:04 GMT" pgfnum="37274"/>
								<outline text="document.getElementById (&quot;idWhenLastUpdate&quot;).innerHTML = &quot;&lt;b&gt;Last update&lt;/b&gt;: &quot; + formatDate (d, &quot;%A, %B %e, %Y at %l:%M %p&quot;, &quot;-5&quot;) + &quot;.&quot;;"/>
								</outline>
							<outline text="" created="Thu, 06 Feb 2014 23:57:50 GMT" pgfnum="37185"/>
							<outline text="whenLastUpdate = countersdata.whenLastUpdate;" created="Thu, 06 Feb 2014 23:57:35 GMT" pgfnum="37184"/>
							<outline text="" created="Thu, 06 Feb 2014 23:58:28 GMT" pgfnum="37186"/>
							<outline text="ctUpdates++;"/>
							<outline text="}" created="Thu, 06 Feb 2014 23:57:03 GMT" pgfnum="37183"/>
							</outline>
						<outline text="" created="Thu, 06 Feb 2014 00:21:48 GMT" pgfnum="37084"/>
						<outline text="document.getElementById (&quot;idCtChecks&quot;).innerHTML = ctUpdates + &quot; / &quot; + ++ctChecks;"/>
						<outline text="" created="Fri, 07 Feb 2014 02:49:44 GMT" pgfnum="37195"/>
						<outline text="console.log (&quot;viewTodaysHits call was successful.&quot;);" isComment="true" created="Mon, 03 Feb 2014 17:10:51 GMT" pgfnum="36951"/>
						<outline text="})"/>
						</outline>
					<outline text=".error (function (status, textStatus, errorThrown) {">
						<outline text="console.log (&quot;viewTodaysHits error: &quot; + textStatus);" created="Mon, 03 Feb 2014 17:10:51 GMT" pgfnum="36951"/>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Thu, 06 Feb 2014 00:19:49 GMT" pgfnum="37082"/>
					</outline>
				<outline text="function setGroup (groupname) {" created="Sun, 09 Feb 2014 17:24:48 GMT" pgfnum="37326">
					<outline text="myGroupName = groupname;" created="Sun, 09 Feb 2014 17:25:05 GMT" pgfnum="37328"/>
					<outline text="whenLastUpdate = &quot;&quot;; //force update" created="Sun, 09 Feb 2014 17:30:14 GMT" pgfnum="37330"/>
					<outline text="viewTodaysHits ();" created="Sun, 09 Feb 2014 17:25:17 GMT" pgfnum="37329"/>
					<outline text="}" created="Sun, 09 Feb 2014 17:24:57 GMT" pgfnum="37327"/>
					</outline>
				<outline text="function setArray (arrayname) {" created="Sun, 09 Feb 2014 17:24:48 GMT" pgfnum="37326">
					<outline text="whichArrayToDisplay = arrayname;" created="Sun, 09 Feb 2014 17:25:05 GMT" pgfnum="37328"/>
					<outline text="whenLastUpdate = &quot;&quot;; //force update" created="Sun, 09 Feb 2014 17:30:14 GMT" pgfnum="37330"/>
					<outline text="viewTodaysHits ();" created="Sun, 09 Feb 2014 17:25:17 GMT" pgfnum="37329"/>
					<outline text="}" created="Sun, 09 Feb 2014 17:24:57 GMT" pgfnum="37327"/>
					</outline>
				<outline text="function everyTenSeconds () {" created="Thu, 06 Feb 2014 23:53:25 GMT" pgfnum="37174">
					<outline text="viewTodaysHits ();" created="Thu, 06 Feb 2014 00:23:09 GMT" pgfnum="37088"/>
					<outline text="}" created="Thu, 06 Feb 2014 23:53:30 GMT" pgfnum="37175"/>
					</outline>
				<outline text="function startup () {" created="Thu, 06 Feb 2014 00:23:05 GMT" pgfnum="37087">
					<outline text="var group = getURLParameter (&quot;group&quot;), list = getURLParameter (&quot;list&quot;);" created="Thu, 06 Feb 2014 22:53:25 GMT" pgfnum="37155"/>
					<outline text="if (group != &quot;null&quot;) {" created="Thu, 06 Feb 2014 22:57:49 GMT" pgfnum="37160">
						<outline text="myGroupName = group;" created="Thu, 06 Feb 2014 22:57:55 GMT" pgfnum="37161"/>
						<outline text="}" created="Thu, 06 Feb 2014 22:58:00 GMT" pgfnum="37162"/>
						</outline>
					<outline text="if (list != &quot;null&quot;) {" created="Thu, 06 Feb 2014 22:57:49 GMT" pgfnum="37160">
						<outline text="whichArrayToDisplay = list;" created="Thu, 06 Feb 2014 22:57:55 GMT" pgfnum="37161"/>
						<outline text="}" created="Thu, 06 Feb 2014 22:58:00 GMT" pgfnum="37162"/>
						</outline>
					<outline text="viewTodaysHits ();" created="Thu, 06 Feb 2014 00:23:09 GMT" pgfnum="37088"/>
					<outline text="self.setInterval (everyTenSeconds, 10 * 1000); //call every ten seconds"/>
					<outline text="hitCounter (); "/>
					<outline text="}" created="Thu, 06 Feb 2014 00:23:12 GMT" pgfnum="37089"/>
					</outline>
				</outline>
			<outline text="styles.css">
				<outline text="body {" created="Sun, 02 Feb 2014 15:25:01 GMT" pgfnum="36760">
					<outline text="background-color: whitesmoke;" created="Sun, 02 Feb 2014 15:25:03 GMT" pgfnum="36761"/>
					<outline text="}" created="Sun, 02 Feb 2014 15:25:09 GMT" pgfnum="36762"/>
					</outline>
				<outline text=".divCountsContainer {" created="Thu, 06 Feb 2014 00:55:27 GMT" pgfnum="37128">
					<outline text="width: 50%;" created="Thu, 06 Feb 2014 00:55:34 GMT" pgfnum="37130"/>
					<outline text="margin-top: 30px;" created="Thu, 06 Feb 2014 00:55:41 GMT" pgfnum="37131"/>
					<outline text="margin-left: auto;" created="Thu, 06 Feb 2014 00:55:49 GMT" pgfnum="37132"/>
					<outline text="margin-right: auto;" created="Thu, 06 Feb 2014 00:55:56 GMT" pgfnum="37133"/>
					<outline text="margin-bottom: 250px;" created="Thu, 06 Feb 2014 00:55:41 GMT" pgfnum="37131"/>
					<outline text="}" created="Thu, 06 Feb 2014 00:55:31 GMT" pgfnum="37129"/>
					</outline>
				<outline text=".divCountsContainer td {" created="Thu, 06 Feb 2014 00:56:51 GMT" pgfnum="37138">
					<outline text="font-family: Arial; " created="Sat, 09 Mar 2013 23:17:26 GMT" pgfnum="20070"/>
					<outline text="font-size: 16px; " created="Sat, 09 Mar 2013 23:17:41 GMT" pgfnum="20071"/>
					<outline text="line-height: 160%;" created="Thu, 06 Feb 2014 00:57:00 GMT" pgfnum="37140"/>
					<outline text="}" created="Thu, 06 Feb 2014 00:56:56 GMT" pgfnum="37139"/>
					</outline>
				<outline text=".divCountsContainer .tdCt {" created="Thu, 06 Feb 2014 00:56:51 GMT" pgfnum="37138">
					<outline text="text-align: right;" created="Thu, 06 Feb 2014 00:59:44 GMT" pgfnum="37146"/>
					<outline text="}" created="Thu, 06 Feb 2014 00:56:56 GMT" pgfnum="37139"/>
					</outline>
				<outline text=".tableCounts {" created="Sun, 09 Feb 2014 04:41:19 GMT" pgfnum="37269">
					<outline text="border:1px solid gainsboro;"/>
					<outline text="}" created="Sun, 09 Feb 2014 04:41:25 GMT" pgfnum="37270"/>
					</outline>
				<outline text=".tableCounts .tdUrl {" isComment="true" created="Sun, 09 Feb 2014 04:41:19 GMT" pgfnum="37269">
					<outline text="width: 33%;"/>
					<outline text="}" created="Sun, 09 Feb 2014 04:41:25 GMT" pgfnum="37270"/>
					</outline>
				<outline text="h1 {" created="Thu, 06 Feb 2014 23:42:26 GMT" pgfnum="37165">
					<outline text="font-family: &quot;Fontdiner Swanky&quot;;" isComment="true" created="Sun, 09 Feb 2014 04:43:52 GMT" pgfnum="37271"/>
					<outline text="margin-top: 25px;" created="Thu, 06 Feb 2014 23:42:27 GMT" pgfnum="37166"/>
					<outline text="margin-bottom: 25px;" created="Thu, 06 Feb 2014 23:42:27 GMT" pgfnum="37166"/>
					<outline text="}" created="Thu, 06 Feb 2014 23:42:43 GMT" pgfnum="37169"/>
					</outline>
				<outline text=".divCommands {" created="Sun, 09 Feb 2014 17:15:40 GMT" pgfnum="37319">
					<outline text="font-size: 18px;" created="Sun, 09 Feb 2014 17:21:45 GMT" pgfnum="37323"/>
					<outline text="font-weight: bold;" created="Sun, 09 Feb 2014 17:21:54 GMT" pgfnum="37324"/>
					<outline text="height: 3em;" created="Sun, 09 Feb 2014 17:15:46 GMT" pgfnum="37321"/>
					<outline text="margin-bottom: 20px;" created="Thu, 06 Feb 2014 00:55:41 GMT" pgfnum="37131"/>
					<outline text="}" created="Sun, 09 Feb 2014 17:15:42 GMT" pgfnum="37320"/>
					</outline>
				<outline text=".ulNavbar {" created="Sun, 09 Feb 2014 17:11:01 GMT" pgfnum="37316">
					<outline text="list-style-type: none;"/>
					<outline text="margin: 0;"/>
					<outline text="padding: 0;"/>
					<outline text="}" created="Sun, 09 Feb 2014 17:11:03 GMT" pgfnum="37317"/>
					</outline>
				<outline text=".ulNavbar a {">
					<outline text="display: block;"/>
					<outline text="width: 90px;" isComment="true"/>
					<outline text="cursor: pointer;" created="Sun, 09 Feb 2014 17:18:53 GMT" pgfnum="37322"/>
					<outline text="}"/>
					</outline>
				<outline text=".ulNavbar li {">
					<outline text="display: inline;"/>
					<outline text="float: left;" created="Sun, 09 Feb 2014 17:13:55 GMT" pgfnum="37318"/>
					<outline text="margin-right: 1em;" created="Sun, 09 Feb 2014 17:22:55 GMT" pgfnum="37325"/>
					<outline text="}"/>
					</outline>
				<outline text="" created="Thu, 06 Feb 2014 00:56:40 GMT" pgfnum="37137"/>
				<outline text=".divStringLabMessage {" created="Mon, 03 Feb 2014 14:44:37 GMT" pgfnum="36888">
					<outline text="width: 500px;" created="Mon, 03 Feb 2014 14:44:43 GMT" pgfnum="36890"/>
					<outline text="margin-left: auto;" created="Sun, 02 Feb 2014 15:24:20 GMT" pgfnum="36756"/>
					<outline text="margin-right: auto;" created="Sun, 02 Feb 2014 15:24:29 GMT" pgfnum="36757"/>
					<outline text="margin-top: 400px;" created="Sun, 02 Feb 2014 15:24:34 GMT" pgfnum="36758"/>
					<outline text="}" created="Mon, 03 Feb 2014 14:44:39 GMT" pgfnum="36889"/>
					</outline>
				<outline text=".divSpinContainer {" created="Sun, 02 Feb 2014 15:24:05 GMT" pgfnum="36753">
					<outline text="width: 100px;" created="Sun, 02 Feb 2014 15:24:11 GMT" pgfnum="36755"/>
					<outline text="margin-left: auto;" created="Sun, 02 Feb 2014 15:24:20 GMT" pgfnum="36756"/>
					<outline text="margin-right: auto;" created="Sun, 02 Feb 2014 15:24:29 GMT" pgfnum="36757"/>
					<outline text="margin-top: 400px;" created="Sun, 02 Feb 2014 15:24:34 GMT" pgfnum="36758"/>
					<outline text="background-color: white;" created="Sun, 02 Feb 2014 15:24:53 GMT" pgfnum="36759"/>
					<outline text="}" created="Sun, 02 Feb 2014 15:24:08 GMT" pgfnum="36754"/>
					</outline>
				<outline text="" created="Sun, 02 Feb 2014 15:25:15 GMT" pgfnum="36763"/>
				<outline text=".divPlayerDemo {" created="Wed, 11 Sep 2013 14:27:47 GMT" pgfnum="30096">
					<outline text="margin-left: auto;" created="Wed, 11 Sep 2013 14:27:58 GMT" pgfnum="30098"/>
					<outline text="margin-right: auto;" created="Wed, 11 Sep 2013 14:28:05 GMT" pgfnum="30099"/>
					<outline text="margin-top: 100px;" created="Wed, 11 Sep 2013 14:28:08 GMT" pgfnum="30100"/>
					<outline text="width: 600px;" created="Wed, 11 Sep 2013 14:30:54 GMT" pgfnum="30108"/>
					<outline text="}" created="Wed, 11 Sep 2013 14:27:50 GMT" pgfnum="30097"/>
					</outline>
				<outline text=".divPlayerDemo h1 {" created="Wed, 11 Sep 2013 14:28:24 GMT" pgfnum="30101">
					<outline text="font-family: Rancho;" created="Wed, 11 Sep 2013 14:28:40 GMT" pgfnum="30104"/>
					<outline text="font-size: 64px;" created="Wed, 11 Sep 2013 14:28:34 GMT" pgfnum="30103"/>
					<outline text="margin-bottom: 40px;" created="Wed, 11 Sep 2013 14:31:03 GMT" pgfnum="30109"/>
					<outline text="}" created="Wed, 11 Sep 2013 14:28:29 GMT" pgfnum="30102"/>
					</outline>
				</outline>
			<outline text="index.html">
				<outline text="&lt;html&gt;" created="Wed, 05 Feb 2014 23:58:24 GMT" pgfnum="37054">
					<outline text="&lt;head&gt;" created="Thu, 06 Feb 2014 00:18:00 GMT" pgfnum="37074">
						<outline text="&lt;title&gt;Counters&lt;/title&gt;"/>
						<outline text="&lt;%basicIncludes2%&gt;"/>
						<outline text="&lt;script src=&quot;//s3.amazonaws.com/fargo.io/code/strftime.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;script src=&quot;//s3.amazonaws.com/scripting.com/code/counters/code.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;link href=&quot;//s3.amazonaws.com/scripting.com/code/counters/styles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;"/>
						<outline text="really old stuff -- 2/2/23; 4:32:08 PM by DW" isComment="true" created="Thu, 02 Feb 2023 21:32:05 GMT">
							<outline text="&lt;link href=&quot;http://outliner.smallpicture.com/bootstrap.css?v=1.17&quot; rel=&quot;stylesheet&quot;&gt;" isComment="true"/>
							<outline text="&lt;link href=&quot;http://outliner.smallpicture.com/ranchoFont.css?v=1.26&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;" isComment="true"/>
							<outline text="&lt;script src=&quot;http://outliner.smallpicture.com/jquery-1.9.1.min.js?v=1.17&quot;&gt;&lt;/script&gt;" isComment="true"/>
							<outline text="&lt;script src=&quot;http://outliner.smallpicture.com/bootstrap.min.js?v=1.17&quot;&gt;&lt;/script&gt;" isComment="true"/>
							<outline text="&lt;script src=&quot;http://outliner.smallpicture.com/strings.js&quot; /&gt;&lt;/script&gt;" isComment="true"/>
							<outline text="&lt;script src=&quot;http://outliner.smallpicture.com/utils.js&quot; /&gt;&lt;/script&gt;" isComment="true"/>
							<outline text="&lt;script src=&quot;http://outliner.smallpicture.com/fargoVerbsDev.js?v=1.30&quot;&gt;&lt;/script&gt;" isComment="true"/>
							<outline text="&lt;link href='http://fonts.googleapis.com/css?family=Fontdiner+Swanky' rel='stylesheet' type='text/css'&gt;" isComment="true"/>
							</outline>
						<outline text="more recent old stuff -- 2/2/23; 4:32:08 PM by DW" isComment="true" created="Thu, 02 Feb 2023 21:33:54 GMT">
							<outline text="&lt;script src=&quot;http://static.smallpicture.com/js/strftime.js?v=1.44&quot;&gt;&lt;/script&gt;"/>
							<outline text="&lt;script src=&quot;http://scripting.com/code/counters/code.js&quot;&gt;&lt;/script&gt;"/>
							<outline text="&lt;link href=&quot;http://scripting.com/code/counters/styles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;"/>
							</outline>
						<outline text="&lt;script&gt;" created="Thu, 06 Feb 2014 00:18:03 GMT" pgfnum="37075">
							<outline text="&lt;/script&gt;" created="Thu, 06 Feb 2014 00:18:06 GMT" pgfnum="37076"/>
							</outline>
						<outline text="&lt;style&gt;" created="Wed, 11 Sep 2013 14:27:45 GMT" pgfnum="30095">
							<outline text="&lt;/style&gt;" created="Wed, 11 Sep 2013 14:30:17 GMT" pgfnum="30105"/>
							</outline>
						<outline text="&lt;/head&gt;" created="Thu, 06 Feb 2014 00:18:10 GMT" pgfnum="37077"/>
						</outline>
					<outline text="&lt;body&gt;" created="Thu, 06 Feb 2014 00:18:16 GMT" pgfnum="37078">
						<outline text="&lt;div id=&quot;idCtChecks&quot; style=&quot;margin-left: 3px; margin-top: 3px;&quot;&gt;&lt;/div&gt;" created="Thu, 06 Feb 2014 23:45:47 GMT" pgfnum="37173"/>
						<outline text="&lt;div class=&quot;divCountsContainer&quot;&gt;" created="Thu, 06 Feb 2014 00:47:46 GMT" pgfnum="37117">
							<outline text="&lt;div class=&quot;divCommands&quot;&gt;" created="Sun, 09 Feb 2014 17:05:31 GMT" pgfnum="37309">
								<outline text="&lt;ul class=&quot;ulNavbar&quot;&gt;" created="Sun, 09 Feb 2014 17:09:09 GMT" pgfnum="37315">
									<outline text="&lt;li&gt;&lt;a onclick=&quot;setGroup ('scripting');&quot;&gt;scripting&lt;/a&gt;&lt;/li&gt;" created="Sun, 09 Feb 2014 17:05:56 GMT" pgfnum="37311"/>
									<outline text="&lt;li&gt;&lt;a onclick=&quot;setGroup ('drummer');&quot;&gt;drummer&lt;/a&gt;&lt;/li&gt;" isComment="true" created="Sun, 09 Feb 2014 17:05:56 GMT" pgfnum="37311"/>
									<outline text="&lt;li&gt;&lt;a onclick=&quot;setGroup ('fargoblog');&quot;&gt;fargoblog&lt;/a&gt;&lt;/li&gt;" isComment="true" created="Sun, 09 Feb 2014 17:05:56 GMT" pgfnum="37311"/>
									<outline text="&lt;li&gt;&lt;a onclick=&quot;setArray ('pages');&quot;&gt;pages&lt;/a&gt;&lt;/li&gt;" created="Sun, 09 Feb 2014 17:05:56 GMT" pgfnum="37311"/>
									<outline text="&lt;li&gt;&lt;a onclick=&quot;setArray ('referrers');&quot;&gt;referrers&lt;/a&gt;&lt;/li&gt;" created="Sun, 09 Feb 2014 17:05:56 GMT" pgfnum="37311"/>
									<outline text="&lt;/ul&gt;" created="Sun, 09 Feb 2014 17:05:54 GMT" pgfnum="37310"/>
									</outline>
								<outline text="&lt;/div&gt;" created="Sun, 09 Feb 2014 17:05:54 GMT" pgfnum="37310"/>
								</outline>
							<outline text="&lt;div id=&quot;idWhenLastUpdate&quot;&gt;&lt;/div&gt;" created="Thu, 06 Feb 2014 23:45:47 GMT" pgfnum="37173"/>
							<outline text="&lt;h1 id=&quot;idTitle&quot;&gt;&lt;/h1&gt;" created="Thu, 06 Feb 2014 23:39:19 GMT" pgfnum="37163"/>
							<outline text="&lt;div  id=&quot;idCountsContainer&quot;&gt;" created="Thu, 06 Feb 2014 23:44:04 GMT" pgfnum="37171">
								<outline text="&lt;/div&gt;" created="Thu, 06 Feb 2014 23:44:09 GMT" pgfnum="37172"/>
								</outline>
							<outline text="&lt;/div&gt;"/>
							</outline>
						<outline text="&lt;script&gt;" created="Thu, 06 Feb 2014 00:23:19 GMT" pgfnum="37090">
							<outline text="startup ();" created="Thu, 06 Feb 2014 00:23:25 GMT" pgfnum="37091"/>
							<outline text="&lt;/script&gt;" created="Thu, 06 Feb 2014 00:23:28 GMT" pgfnum="37092"/>
							</outline>
						<outline text="&lt;/body&gt;" created="Thu, 06 Feb 2014 00:18:20 GMT" pgfnum="37079"/>
						</outline>
					<outline text="&lt;/html&gt;" created="Thu, 06 Feb 2014 00:18:22 GMT" pgfnum="37080"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script">
			<outline text="nodeEditorSuite.utilities.buildCounters ()"/>
			</outline>
		</body>
	</opml>
